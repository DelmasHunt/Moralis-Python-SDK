import openapi_{{api_name}}
from openapi_{{api_name}}.apis.tags import {{tag}}_api
from ..utilities import get_common_headers
{% if subnetworksConfig is not none %}
hosts = {
    {% for network in subnetworksConfig["networks"] -%}
        "{{network["name"]}}": "{{network["host"]}}",
    {% endfor -%}
}

def get_host_url(params = None):
    if params is not None and "{{subnetworksConfig["host_parameter"]}}" in params:
        if params["{{subnetworksConfig["host_parameter"]}}"] in hosts:
            return hosts[params["{{subnetworksConfig["host_parameter"]}}"]]
        else:
            raise Exception('Unknown value provided for {{ host_parameter }}.')
    return hosts["{{subnetworksConfig["default_host_name"]}}"]
{% endif %}

def get_api_instance(api_key, params = None):
    configuration = openapi_{{api_name}}.Configuration()
    {%- if subnetworksConfig is not none %}
    configuration.host = get_host_url(params)
    {%- endif -%}
    {%- if security_key == "bearer" %}
    configuration.access_token = api_key
    {% else %}
    configuration.api_key['{{security_key}}'] = api_key
    {% endif -%}
    api_client = openapi_{{api_name}}.ApiClient(configuration)
    headers = get_common_headers()
    for header in headers:
        api_client.default_headers[header] = headers[header]
    api_instance = {{tag}}_api.{{api_client_name}}(api_client)
    api_client.close()

    return api_instance

