{
  "openapi": "3.0.0",
  "paths": {
    "/nfts": {
      "get": {
        "operationId": "getNFTsByIds",
        "x-tag-sdk": "nfts",
        "summary": "Get NFTs by ids",
        "parameters": [
          {
            "name": "token_ids",
            "required": true,
            "in": "query",
            "description": "The identifiers of the tokens to get",
            "schema": {
              "minItems": 1,
              "maxItems": 25,
              "nullable": false,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NFTTokenResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          }
        },
        "tags": ["NFT Tokens"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nfts/collections/{collection_data_id_hash}/tokens": {
      "get": {
        "operationId": "getNFTsByCollection",
        "x-tag-sdk": "nfts",
        "summary": "Get NFTs by Collection",
        "parameters": [
          {
            "name": "collection_data_id_hash",
            "required": true,
            "in": "path",
            "description": "The collection data id hash of the collection",
            "schema": {
              "nullable": false,
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "example": 10,
            "description": "The number of results to return",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "nullable": false,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "example": 0,
            "description": "The number of results to skip",
            "schema": {
              "minimum": 0,
              "maximum": 100,
              "nullable": false,
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "The cursor to use for getting the next page",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NFTTokensByCollectionResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          }
        },
        "tags": ["NFT Tokens"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nfts/creators": {
      "get": {
        "operationId": "getNFTsByCreators",
        "x-tag-sdk": "nfts",
        "summary": "Get NFTs by creators",
        "parameters": [
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "example": 10,
            "description": "The number of tokens to return",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "nullable": false,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "example": 0,
            "description": "The number of results to skip",
            "schema": {
              "minimum": 0,
              "maximum": 100,
              "nullable": false,
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "The cursor to use for getting the next page",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "creator_addresses",
            "required": true,
            "in": "query",
            "description": "The addresses of the creators",
            "example": [
              "0x4d09404aecb8aa005d7cd2ffe0bf604d584c866ae40ba05d8cec2b77ff5ba221"
            ],
            "schema": {
              "minItems": 1,
              "maxItems": 25,
              "nullable": false,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NFTTokensByCreatorsResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          }
        },
        "tags": ["NFT Tokens"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/collections": {
      "get": {
        "operationId": "getNFTCollections",
        "x-tag-sdk": "collections",
        "summary": "Get NFT Collections",
        "parameters": [
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "example": 10,
            "description": "The number of results to return",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "nullable": false,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "example": 0,
            "description": "The number of results to skip",
            "schema": {
              "minimum": 0,
              "maximum": 100,
              "nullable": false,
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "The cursor to use for getting the next page",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4",
            "schema": {
              "nullable": true,
              "default": "",
              "type": "string"
            }
          },
          {
            "name": "fromName",
            "required": false,
            "in": "query",
            "description": "The name of the collection to start from (inclusive and case sensitive)",
            "schema": {
              "minLength": 0,
              "maxLength": 128,
              "nullable": false,
              "type": "string"
            }
          },
          {
            "name": "toName",
            "required": false,
            "in": "query",
            "description": "The name of the collection to end at (inclusive and case sensitive)",
            "schema": {
              "minLength": 0,
              "maxLength": 128,
              "nullable": false,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NFTCollectionsByNameRangeResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          }
        },
        "tags": ["NFT Collections"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/collections/ids": {
      "get": {
        "operationId": "getNFTCollectionsByIds",
        "x-tag-sdk": "collections",
        "summary": "Get NFT Collections by ids",
        "parameters": [
          {
            "name": "ids",
            "required": true,
            "in": "query",
            "example": [
              "6993fb8b5688d392a2d94127b9926519d6327e69f2bcf3dc0c5df2c060aec97d"
            ],
            "description": "The identifiers of the collections to get",
            "schema": {
              "minItems": 1,
              "maxItems": 25,
              "nullable": false,
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NFTCollectionItemResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          }
        },
        "tags": ["NFT Collections"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/collections/creators": {
      "get": {
        "operationId": "getNFTCollectionsByCreator",
        "x-tag-sdk": "collections",
        "summary": "Get NFT Collections by creator",
        "parameters": [
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "example": 10,
            "description": "The number of results to return",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "nullable": false,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "example": 0,
            "description": "The number of results to skip",
            "schema": {
              "minimum": 0,
              "maximum": 100,
              "nullable": false,
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "The cursor to use for getting the next page",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4",
            "schema": {
              "nullable": true,
              "default": "",
              "type": "string"
            }
          },
          {
            "name": "creator_address",
            "required": true,
            "in": "query",
            "description": "The address of the creator",
            "example": "0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac",
            "schema": {
              "nullable": true,
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NFTCollectionsByCreatorResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          }
        },
        "tags": ["NFT Collections"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nfts/owners": {
      "get": {
        "operationId": "getNFTOwnersByTokens",
        "x-tag-sdk": "nfts",
        "summary": "Get NFT Owners by tokens",
        "parameters": [
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "example": 10,
            "description": "The number of results to return",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "nullable": false,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "example": 0,
            "description": "The number of results to skip",
            "schema": {
              "minimum": 0,
              "maximum": 100,
              "nullable": false,
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "The cursor to use for getting the next page",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "token_ids",
            "required": true,
            "in": "query",
            "description": "The identifiers of the tokens to get owners for",
            "schema": {
              "minItems": 1,
              "maxItems": 25,
              "nullable": false,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NFTOwnersByTokensResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          }
        },
        "tags": ["NFT Owners"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nfts/collections/{collection_data_id_hash}/owners": {
      "get": {
        "operationId": "getNFTOwnersByCollection",
        "x-tag-sdk": "nfts",
        "summary": "Get NFT Owners by Collection",
        "parameters": [
          {
            "name": "collection_data_id_hash",
            "required": true,
            "in": "path",
            "description": "The id of the token",
            "schema": {
              "nullable": false,
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "example": 10,
            "description": "The number of results to return",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "nullable": false,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "example": 0,
            "description": "The number of results to skip",
            "schema": {
              "minimum": 0,
              "maximum": 100,
              "nullable": false,
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "The cursor to use for getting the next page",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "wallet_blacklist",
            "required": false,
            "in": "query",
            "description": "The addresses of the wallets to blacklist",
            "schema": {
              "minItems": 1,
              "maxItems": 25,
              "nullable": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "wallet_whitelist",
            "required": false,
            "in": "query",
            "description": "The addresses of the wallets to whitelist",
            "schema": {
              "minItems": 1,
              "maxItems": 25,
              "nullable": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NFTOwnersByCollectionResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          }
        },
        "tags": ["NFT Owners"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nfts/collections/{collection_data_id_hash}/owners/list": {
      "get": {
        "operationId": "getNFTOwnersOfCollection",
        "x-tag-sdk": "nfts",
        "summary": "Get NFT Owners of Collection",
        "parameters": [
          {
            "name": "collection_data_id_hash",
            "required": true,
            "in": "path",
            "description": "The id of the token",
            "schema": {
              "nullable": false,
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "example": 10,
            "description": "The number of results to return",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "nullable": false,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "example": 0,
            "description": "The number of results to skip",
            "schema": {
              "minimum": 0,
              "maximum": 100,
              "nullable": false,
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "The cursor to use for getting the next page",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NFTOwnersOfCollectionResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          }
        },
        "tags": ["NFT Owners"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nfts/transfers": {
      "get": {
        "operationId": "getNFTTransfersByIds",
        "x-tag-sdk": "nfts",
        "summary": "Get NFT Transferss by Token ids",
        "parameters": [
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "example": 10,
            "description": "The number of tokens to return",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "nullable": false,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "example": 0,
            "description": "The number of results to skip",
            "schema": {
              "minimum": 0,
              "maximum": 100,
              "nullable": false,
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "The cursor to use for getting the next page",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "wallet_blacklist",
            "required": false,
            "in": "query",
            "description": "The addresses of the wallets to blacklist",
            "schema": {
              "minItems": 1,
              "maxItems": 25,
              "nullable": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "wallet_whitelist",
            "required": false,
            "in": "query",
            "description": "The addresses of the wallets to whitelist",
            "example": [
              "0x4d09404aecb8aa005d7cd2ffe0bf604d584c866ae40ba05d8cec2b77ff5ba221"
            ],
            "schema": {
              "minItems": 1,
              "maxItems": 25,
              "nullable": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "token_ids",
            "required": true,
            "in": "query",
            "example": [
              "1824178d98256f40046db3db8cf462f1c0a8e0d37304218044f11e69761c88e1"
            ],
            "description": "The identifiers of the tokens to get",
            "schema": {
              "minItems": 1,
              "maxItems": 25,
              "nullable": false,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NFTTransfersByTokensResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          }
        },
        "tags": ["NFT Transfers"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nfts/transfers/collections/{collection_data_id_hash}": {
      "get": {
        "operationId": "getNFTTransfersByCollection",
        "x-tag-sdk": "nfts",
        "summary": "Get NFT Transfers by Collection",
        "parameters": [
          {
            "name": "collection_data_id_hash",
            "required": true,
            "in": "path",
            "description": "The collection data id hash of the token",
            "schema": {
              "minLength": 64,
              "maxLength": 64,
              "nullable": false,
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "example": 10,
            "description": "The number of results to return",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "nullable": false,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "example": 0,
            "description": "The number of results to skip",
            "schema": {
              "minimum": 0,
              "maximum": 100,
              "nullable": false,
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "The cursor to use for getting the next page",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "wallet_whitelist",
            "required": false,
            "in": "query",
            "description": "The addresses of the wallets to whitelist",
            "schema": {
              "minItems": 1,
              "maxItems": 25,
              "nullable": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "wallet_blacklist",
            "required": false,
            "in": "query",
            "description": "The addresses of the wallets to blacklist",
            "example": [
              "0x4d09404aecb8aa005d7cd2ffe0bf604d584c866ae40ba05d8cec2b77ff5ba221"
            ],
            "schema": {
              "minItems": 1,
              "maxItems": 25,
              "nullable": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNFTTransfersByCollectionResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          }
        },
        "tags": ["NFT Transfers"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nfts/transfers/creators": {
      "get": {
        "operationId": "getNFTTransfersByCreators",
        "x-tag-sdk": "nfts",
        "summary": "Get NFT Transfers by creators",
        "parameters": [
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "example": 10,
            "description": "The number of results to return",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "nullable": false,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "example": 0,
            "description": "The number of results to skip",
            "schema": {
              "minimum": 0,
              "maximum": 100,
              "nullable": false,
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "The cursor to use for getting the next page",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "creator_addresses",
            "required": true,
            "in": "query",
            "description": "The addresses of the creators",
            "schema": {
              "minItems": 1,
              "maxItems": 25,
              "nullable": false,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "collection_blacklist",
            "required": false,
            "in": "query",
            "description": "The ids of the collections to whitelist",
            "schema": {
              "minItems": 1,
              "maxItems": 25,
              "nullable": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "collection_whitelist",
            "required": false,
            "in": "query",
            "description": "The ids of the collections to whitelist",
            "schema": {
              "minItems": 1,
              "maxItems": 25,
              "nullable": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNFTTransfersByCreatorsResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          }
        },
        "tags": ["NFT Transfers"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/nfts/transfers/wallets": {
      "get": {
        "operationId": "getNFTTransfersByWallets",
        "x-tag-sdk": "nfts",
        "summary": "Get NFT Transfers by wallets",
        "parameters": [
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "example": 10,
            "description": "The number of tokens to return",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "nullable": false,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "example": 0,
            "description": "The number of results to skip",
            "schema": {
              "minimum": 0,
              "maximum": 100,
              "nullable": false,
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "The cursor to use for getting the next page",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "wallet_addresses",
            "required": true,
            "in": "query",
            "description": "The addresses of the wallets to get transfers for",
            "schema": {
              "minItems": 1,
              "maxItems": 25,
              "nullable": false,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "collection_blacklist",
            "required": false,
            "in": "query",
            "description": "The ids of the collections to whitelist",
            "schema": {
              "minItems": 1,
              "maxItems": 25,
              "nullable": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "collection_whitelist",
            "required": false,
            "in": "query",
            "description": "The ids of the collections to whitelist",
            "schema": {
              "minItems": 1,
              "maxItems": 25,
              "nullable": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NFTTransfersByWalletsResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          }
        },
        "tags": ["NFT Transfers"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/coins": {
      "get": {
        "operationId": "getCoinInfoByCoinTypeHashes",
        "x-tag-sdk": "coins",
        "summary": "Get Coin Metadata by Coin Type Hashes",
        "parameters": [
          {
            "name": "coin_type_hashes",
            "required": true,
            "in": "query",
            "description": "The coin type hashes to fetch info about",
            "schema": {
              "minItems": 1,
              "maxItems": 25,
              "nullable": false,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CoinInfoDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          }
        },
        "tags": ["Coin Metadata"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/coins/latest": {
      "get": {
        "operationId": "getLatestCoins",
        "x-tag-sdk": "coins",
        "summary": "Get latest deployed coins",
        "parameters": [
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "example": 10,
            "description": "The number of results to return",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "nullable": false,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "example": 0,
            "description": "The number of results to skip",
            "schema": {
              "minimum": 0,
              "maximum": 100,
              "nullable": false,
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "The cursor to use for getting the next page",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLatestCoinsResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          }
        },
        "tags": ["Coin Metadata"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/coins/names": {
      "get": {
        "operationId": "getCoinsByNameRange",
        "x-tag-sdk": "coins",
        "summary": "Get Coin Metadata by name range",
        "parameters": [
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "example": 10,
            "description": "The number of results to return",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "nullable": false,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "example": 0,
            "description": "The number of results to skip",
            "schema": {
              "minimum": 0,
              "maximum": 100,
              "nullable": false,
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "The cursor to use for getting the next page",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "from_name",
            "required": false,
            "in": "query",
            "description": "The name of the coin to start from (inclusive and case sensitive)",
            "schema": {
              "minLength": 0,
              "maxLength": 32,
              "nullable": false,
              "type": "string"
            }
          },
          {
            "name": "to_name",
            "required": false,
            "in": "query",
            "description": "The name of the coin to end at (inclusive and case sensitive)",
            "schema": {
              "minLength": 0,
              "maxLength": 32,
              "nullable": false,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCoinsByNameRangeResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          }
        },
        "tags": ["Coin Metadata"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/coins/symbols": {
      "get": {
        "operationId": "getCoinsBySymbolRange",
        "x-tag-sdk": "coins",
        "summary": "Get Coin Metadata by symbol range",
        "parameters": [
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "example": 10,
            "description": "The number of results to return",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "nullable": false,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "example": 0,
            "description": "The number of results to skip",
            "schema": {
              "minimum": 0,
              "maximum": 100,
              "nullable": false,
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "The cursor to use for getting the next page",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "from_symbol",
            "required": false,
            "in": "query",
            "description": "The name of the coin to start from (inclusive and case sensitive)",
            "schema": {
              "minLength": 0,
              "maxLength": 10,
              "nullable": false,
              "type": "string"
            }
          },
          {
            "name": "to_symbol",
            "required": false,
            "in": "query",
            "description": "The name of the coin to end at (inclusive and case sensitive)",
            "schema": {
              "minLength": 0,
              "maxLength": 10,
              "nullable": false,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCoinsBySymbolRangeResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          }
        },
        "tags": ["Coin Metadata"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/coins/creators": {
      "get": {
        "operationId": "getCoinsByCreators",
        "x-tag-sdk": "coins",
        "summary": "Get Coin Metadata by creator addresses",
        "parameters": [
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "example": 10,
            "description": "The number of results to return",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "nullable": false,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "example": 0,
            "description": "The number of results to skip",
            "schema": {
              "minimum": 0,
              "maximum": 100,
              "nullable": false,
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "The cursor to use for getting the next page",
            "schema": {
              "nullable": true,
              "default": "",
              "type": "string"
            }
          },
          {
            "name": "creator_addresses",
            "required": true,
            "in": "query",
            "description": "The addresses of the creators",
            "schema": {
              "minItems": 1,
              "maxItems": 25,
              "nullable": false,
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCoinsByCreatorsResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          }
        },
        "tags": ["Coin Metadata"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/coins/transfers/wallets": {
      "get": {
        "operationId": "getCoinTransfersByOwnerAddresses",
        "x-tag-sdk": "coins",
        "summary": "Get Coin Transfers by wallet addresses",
        "parameters": [
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "example": 10,
            "description": "The number of results to return",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "nullable": false,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "example": 0,
            "description": "The number of results to skip",
            "schema": {
              "minimum": 0,
              "maximum": 100,
              "nullable": false,
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "The cursor to use for getting the next page",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "owner_addresses",
            "required": true,
            "in": "query",
            "description": "The addresses of the owners to get tokens for",
            "schema": {
              "minItems": 1,
              "maxItems": 25,
              "nullable": false,
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "from_date",
            "required": false,
            "in": "query",
            "description": "The date from which to fetch coin transfers",
            "schema": {
              "minLength": 1,
              "maxLength": 30,
              "nullable": false,
              "type": "string"
            }
          },
          {
            "name": "to_date",
            "required": false,
            "in": "query",
            "description": "The date to which to fetch coin transfers",
            "schema": {
              "minLength": 1,
              "maxLength": 30,
              "nullable": false,
              "type": "string"
            }
          },
          {
            "name": "coin_type_blacklist",
            "required": false,
            "in": "query",
            "description": "The coin types of the coins to whitelist",
            "schema": {
              "minItems": 1,
              "maxItems": 25,
              "nullable": true,
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "coin_type_whitelist",
            "required": false,
            "in": "query",
            "description": "The coin types of the coins to whitelist",
            "schema": {
              "minItems": 1,
              "maxItems": 25,
              "nullable": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCoinTransfersByOwnerAddressesResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          }
        },
        "tags": ["Coin Transfers"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/coins/transfers/blocks": {
      "get": {
        "operationId": "getCoinTransfersByBlockHeights",
        "x-tag-sdk": "coins",
        "summary": "Get Coin Transfers by block heights",
        "parameters": [
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "example": 10,
            "description": "The number of results to return",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "nullable": false,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "example": 0,
            "description": "The number of results to skip",
            "schema": {
              "minimum": 0,
              "maximum": 100,
              "nullable": false,
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "The cursor to use for getting the next page",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4",
            "schema": {
              "nullable": true,
              "default": "",
              "type": "string"
            }
          },
          {
            "name": "block_heights",
            "required": true,
            "in": "query",
            "example": "0x9858bac330f9ba8baab7ebd5c55aa69362016a5ccb3a4c3f8e5e53faf0f3ef::hero::Hero",
            "description": "The coin types to fetch info about",
            "schema": {
              "minItems": 1,
              "maxItems": 25,
              "nullable": false,
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCoinTransfersByBlockHeightsResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          }
        },
        "tags": ["Coin Transfers"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/coins/transfers/{coin_type}": {
      "get": {
        "operationId": "getCoinTransfersByCoinType",
        "x-tag-sdk": "coins",
        "summary": "Get Coin Transfers by Coin Type",
        "parameters": [
          {
            "name": "coin_type",
            "required": true,
            "in": "path",
            "example": "0x9858bac330f9ba8baab7ebd5c55aa69362016a5ccb3a4c3f8e5e53faf0f3ef::hero::Hero",
            "description": "The coin type to fetch info about",
            "schema": {
              "minLength": 1,
              "maxLength": 5000,
              "nullable": false,
              "default": "",
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "example": 10,
            "description": "The number of results to return",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "nullable": false,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "example": 0,
            "description": "The number of results to skip",
            "schema": {
              "minimum": 0,
              "maximum": 100,
              "nullable": false,
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "The cursor to use for getting the next page",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4",
            "schema": {
              "nullable": true,
              "default": "",
              "type": "string"
            }
          },
          {
            "name": "from_date",
            "required": false,
            "in": "query",
            "example": "2021-07-01",
            "description": "The date from which to fetch coin transfers",
            "schema": {
              "minLength": 1,
              "maxLength": 30,
              "nullable": false,
              "default": "",
              "type": "string"
            }
          },
          {
            "name": "to_date",
            "required": false,
            "in": "query",
            "example": "2021-08-01",
            "description": "The date to which to fetch coin transfers",
            "schema": {
              "minLength": 1,
              "maxLength": 30,
              "nullable": false,
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCoinTransfersByCoinTypeResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          }
        },
        "tags": ["Coin Transfers"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/coins/owners/{coin_type_hash}/top-holders": {
      "get": {
        "operationId": "getTopHoldersByCoin",
        "x-tag-sdk": "coins",
        "summary": "Get top Holders of Coin",
        "parameters": [
          {
            "name": "coin_type_hash",
            "required": true,
            "in": "path",
            "example": "2259ad43589d05db480120c8b0050ab04995c1021f0935a18b484eba66b6762e",
            "description": "The coin type hash to fetch info about",
            "schema": {
              "minLength": 1,
              "maxLength": 5000,
              "nullable": false,
              "default": "",
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "example": 10,
            "description": "The number of results to return",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "nullable": false,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "example": 0,
            "description": "The number of results to skip",
            "schema": {
              "minimum": 0,
              "maximum": 100,
              "nullable": false,
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "The cursor to use for getting the next page",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4",
            "schema": {
              "nullable": true,
              "default": "",
              "type": "string"
            }
          },
          {
            "name": "min_amount",
            "required": false,
            "in": "query",
            "description": "The minimum amount of coins required for a wallet to be included in the results",
            "schema": {
              "minimum": 1,
              "maximum": 1.7976931348623157e308,
              "nullable": true,
              "type": "number"
            }
          },
          {
            "name": "min_version",
            "required": false,
            "in": "query",
            "description": "The minimum version on when the balance was last updated",
            "schema": {
              "minimum": 1,
              "maximum": 1.7976931348623157e308,
              "nullable": true,
              "type": "number"
            }
          },
          {
            "name": "wallet_blacklist",
            "required": false,
            "in": "query",
            "description": "The addresses of the wallets to blacklist",
            "schema": {
              "minItems": 1,
              "maxItems": 25,
              "nullable": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "wallet_whitelist",
            "required": false,
            "in": "query",
            "description": "The addresses of the wallets to whitelist",
            "schema": {
              "minItems": 1,
              "maxItems": 25,
              "nullable": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTopHoldersByCoinResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          }
        },
        "tags": ["Coin Balances"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/wallets/coins": {
      "get": {
        "operationId": "getCoinBalancesByWallets",
        "x-tag-sdk": "wallets",
        "summary": "Get Coin Balances by wallet addresses",
        "parameters": [
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "example": 10,
            "description": "The number of results to return",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "nullable": false,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "example": 0,
            "description": "The number of results to skip",
            "schema": {
              "minimum": 0,
              "maximum": 100,
              "nullable": false,
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "The cursor to use for getting the next page",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "owner_addresses",
            "required": true,
            "in": "query",
            "description": "The addresses of the owners to get coin balances for",
            "schema": {
              "minItems": 1,
              "maxItems": 25,
              "nullable": false,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "coin_type_hash_blacklist",
            "required": false,
            "in": "query",
            "description": "The coin type hashes of the coins to whitelist",
            "schema": {
              "minItems": 1,
              "maxItems": 25,
              "nullable": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "coin_type_hash_whitelist",
            "required": false,
            "in": "query",
            "description": "The coin type hashes of the coins to whitelist",
            "schema": {
              "minItems": 1,
              "maxItems": 25,
              "nullable": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCoinBalancesByWalletsResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          }
        },
        "tags": ["Wallets"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/wallets/coins/history": {
      "get": {
        "operationId": "getHistoricalCoinBalancesByWallets",
        "x-tag-sdk": "wallets",
        "summary": "Get Historical Coin Balances by wallet addresses",
        "parameters": [
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "example": 10,
            "description": "The number of results to return",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "nullable": false,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "example": 0,
            "description": "The number of results to skip",
            "schema": {
              "minimum": 0,
              "maximum": 100,
              "nullable": false,
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "The cursor to use for getting the next page",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "owner_addresses",
            "required": true,
            "in": "query",
            "description": "The addresses of the owner addresses to get historical balances for",
            "schema": {
              "minItems": 1,
              "maxItems": 25,
              "nullable": false,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "coin_type_hash_blacklist",
            "required": false,
            "in": "query",
            "description": "The coin type hash of the coins to whitelist",
            "schema": {
              "minItems": 1,
              "maxItems": 25,
              "nullable": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "coin_type_hash_whitelist",
            "required": false,
            "in": "query",
            "description": "The coin type hash of the coins to whitelist",
            "schema": {
              "minItems": 1,
              "maxItems": 25,
              "nullable": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHistoricalCoinBalancesByWalletsResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          }
        },
        "tags": ["Wallets"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/wallets/coins/transfers": {
      "get": {
        "operationId": "getCoinTransfersByWalletAddresses",
        "x-tag-sdk": "wallets",
        "summary": "Get Coin Transfers by wallet addresses",
        "parameters": [
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "example": 10,
            "description": "The number of results to return",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "nullable": false,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "example": 0,
            "description": "The number of results to skip",
            "schema": {
              "minimum": 0,
              "maximum": 100,
              "nullable": false,
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "The cursor to use for getting the next page",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "owner_addresses",
            "required": true,
            "in": "query",
            "description": "The addresses of the owners to get tokens for",
            "schema": {
              "minItems": 1,
              "maxItems": 25,
              "nullable": false,
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "from_date",
            "required": false,
            "in": "query",
            "description": "The date from which to fetch coin transfers",
            "schema": {
              "minLength": 1,
              "maxLength": 30,
              "nullable": false,
              "type": "string"
            }
          },
          {
            "name": "to_date",
            "required": false,
            "in": "query",
            "description": "The date to which to fetch coin transfers",
            "schema": {
              "minLength": 1,
              "maxLength": 30,
              "nullable": false,
              "type": "string"
            }
          },
          {
            "name": "coin_type_blacklist",
            "required": false,
            "in": "query",
            "description": "The coin types of the coins to whitelist",
            "schema": {
              "minItems": 1,
              "maxItems": 25,
              "nullable": true,
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "coin_type_whitelist",
            "required": false,
            "in": "query",
            "description": "The coin types of the coins to whitelist",
            "schema": {
              "minItems": 1,
              "maxItems": 25,
              "nullable": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCoinTransfersByOwnerAddressesResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          }
        },
        "tags": ["Wallets"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/wallets/nfts": {
      "get": {
        "operationId": "getNFTByOwners",
        "x-tag-sdk": "wallets",
        "summary": "Get NFTs by wallet addresses",
        "parameters": [
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "example": 10,
            "description": "The number of results to return",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "nullable": false,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "example": 0,
            "description": "The number of results to skip",
            "schema": {
              "minimum": 0,
              "maximum": 100,
              "nullable": false,
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "The cursor to use for getting the next page",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "owner_addresses",
            "required": true,
            "in": "query",
            "description": "The addresses of the owners to get tokens for",
            "schema": {
              "minItems": 1,
              "maxItems": 25,
              "nullable": false,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "collection_blacklist",
            "required": false,
            "in": "query",
            "description": "The collection data id hashes of the collections to whitelist",
            "schema": {
              "minItems": 1,
              "maxItems": 25,
              "nullable": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "collection_whitelist",
            "required": false,
            "in": "query",
            "description": "The collection data id hashes of the collections to whitelist",
            "example": [
              "0x4d09404aecb8aa005d7cd2ffe0bf604d584c866ae40ba05d8cec2b77ff5ba221"
            ],
            "schema": {
              "minItems": 1,
              "maxItems": 25,
              "nullable": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NFTsByOwnersResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          }
        },
        "tags": ["Wallets"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/wallets/nfts/transfers": {
      "get": {
        "operationId": "getWalletsNFTTransfers",
        "x-tag-sdk": "wallets",
        "summary": "Get NFT Transfers by wallets",
        "parameters": [
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "example": 10,
            "description": "The number of tokens to return",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "nullable": false,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "example": 0,
            "description": "The number of results to skip",
            "schema": {
              "minimum": 0,
              "maximum": 100,
              "nullable": false,
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "The cursor to use for getting the next page",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "wallet_addresses",
            "required": true,
            "in": "query",
            "description": "The addresses of the wallets to get transfers for",
            "schema": {
              "minItems": 1,
              "maxItems": 25,
              "nullable": false,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "collection_blacklist",
            "required": false,
            "in": "query",
            "description": "The ids of the collections to whitelist",
            "schema": {
              "minItems": 1,
              "maxItems": 25,
              "nullable": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "collection_whitelist",
            "required": false,
            "in": "query",
            "description": "The ids of the collections to whitelist",
            "schema": {
              "minItems": 1,
              "maxItems": 25,
              "nullable": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NFTTransfersByWalletsResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          }
        },
        "tags": ["Wallets"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/accounts/{address}": {
      "get": {
        "operationId": "getAccount",
        "x-tag-sdk": "accounts",
        "summary": "Get account",
        "parameters": [
          {
            "name": "address",
            "required": true,
            "in": "path",
            "example": "0x88fbd33f54e1126269769780feb24480428179f552e2313fbe571b72e62a1ca1",
            "description": "Address of account with or without a 0x prefix",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ledger_version",
            "required": false,
            "in": "query",
            "example": "32425224034",
            "description": "Ledger version to get state of account.\nIf not provided, it will be the latest version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountResponse"
                }
              }
            }
          }
        },
        "tags": ["Accounts"]
      }
    },
    "/accounts/{address}/resources": {
      "get": {
        "operationId": "getAccountResources",
        "x-tag-sdk": "accounts",
        "summary": "Get account resources",
        "parameters": [
          {
            "name": "address",
            "required": true,
            "in": "path",
            "description": "Address of account with or without a 0x prefix",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ledger_version",
            "required": false,
            "in": "query",
            "example": "32425224034",
            "description": "Ledger version to get state of account.\nIf not provided, it will be the latest version",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "example": 100,
            "description": "Max number of account resources to retrieve.\nIf not provided, defaults to default page size.",
            "schema": {
              "minimum": 1,
              "maximum": 5000,
              "nullable": true,
              "default": 100,
              "type": "number"
            }
          },
          {
            "name": "start",
            "required": false,
            "in": "query",
            "example": "0000000000000000000000000000000000000000000000000000000000000000012f0000000000000000000000000000000000000000000000000000000000000000010d7374616b696e675f70726f7879",
            "description": "Cursor specifying where to start for pagination\nThis cursor cannot be derived manually client-side. Instead, you must call this endpoint once without this query parameter specified, and then use the cursor returned in the X-Aptos-Cursor header in the response.",
            "schema": {
              "nullable": true,
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetAccountResourceResponse"
                  }
                }
              }
            }
          }
        },
        "tags": ["Accounts"]
      }
    },
    "/accounts/{address}/modules": {
      "get": {
        "operationId": "getAccountModules",
        "x-tag-sdk": "accounts",
        "summary": "Get account modules",
        "parameters": [
          {
            "name": "address",
            "required": true,
            "in": "path",
            "description": "Address of account with or without a 0x prefix",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ledger_version",
            "required": false,
            "in": "query",
            "example": "32425224034",
            "description": "Ledger version to get state of account.\nIf not provided, it will be the latest version",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "example": 100,
            "description": "Max number of account resources to retrieve.\nIf not provided, defaults to default page size.",
            "schema": {
              "minimum": 1,
              "maximum": 5000,
              "nullable": true,
              "default": 100,
              "type": "number"
            }
          },
          {
            "name": "start",
            "required": false,
            "in": "query",
            "example": "0000000000000000000000000000000000000000000000000000000000000000012f0000000000000000000000000000000000000000000000000000000000000000010d7374616b696e675f70726f7879",
            "description": "Cursor specifying where to start for pagination\nThis cursor cannot be derived manually client-side. Instead, you must call this endpoint once without this query parameter specified, and then use the cursor returned in the X-Aptos-Cursor header in the response.",
            "schema": {
              "nullable": true,
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetAccountModuleResponse"
                  }
                }
              }
            }
          }
        },
        "tags": ["Accounts"]
      }
    },
    "/accounts/{address}/resource/{resource_type}": {
      "get": {
        "operationId": "getAccountResource",
        "x-tag-sdk": "accounts",
        "summary": "Get account resource",
        "parameters": [
          {
            "name": "address",
            "required": true,
            "in": "path",
            "description": "Address of account with or without a 0x prefix",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resource_type",
            "required": true,
            "in": "path",
            "description": "Name of struct to retrieve e.g. 0x1::account::Account",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ledger_version",
            "required": false,
            "in": "query",
            "example": "32425224034",
            "description": "Ledger version to get state of account.\nIf not provided, it will be the latest version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountResourceResponse"
                }
              }
            }
          }
        },
        "tags": ["Accounts"]
      }
    },
    "/accounts/{address}/resource/{module_name}": {
      "get": {
        "operationId": "getAccountModule",
        "x-tag-sdk": "accounts",
        "summary": "Get account module",
        "parameters": [
          {
            "name": "address",
            "required": true,
            "in": "path",
            "description": "Address of account with or without a 0x prefix",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "module_name",
            "required": true,
            "in": "path",
            "description": "Name of module to retrieve",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ledger_version",
            "required": false,
            "in": "query",
            "example": "32425224034",
            "description": "Ledger version to get state of account.\nIf not provided, it will be the latest version",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountModuleResponse"
                }
              }
            }
          }
        },
        "tags": ["Accounts"]
      }
    },
    "/accounts/{address}/events/{creation_number}": {
      "get": {
        "operationId": "getEventsByCreationNumber",
        "x-tag-sdk": "accounts",
        "summary": "Get events by creation number",
        "parameters": [
          {
            "name": "address",
            "required": true,
            "in": "path",
            "description": "Address of account with or without a 0x prefix",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "creation_number",
            "required": true,
            "in": "path",
            "description": "Creation number corresponding to the event stream originating from the given account.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "example": 100,
            "description": "Max number of account resources to retrieve.\nIf not provided, defaults to default page size.",
            "schema": {
              "minimum": 1,
              "maximum": 5000,
              "nullable": true,
              "default": 100,
              "type": "number"
            }
          },
          {
            "name": "start",
            "required": false,
            "in": "query",
            "description": "Starting sequence number of events.\nIf unspecified, by default will retrieve the most recent events",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetEventsByCreationNumberResponse"
                  }
                }
              }
            }
          }
        },
        "tags": ["Events"]
      }
    },
    "/accounts/{address}/events/{event_handle}/{field_name}": {
      "get": {
        "operationId": "getEventsByEventHandle",
        "x-tag-sdk": "accounts",
        "summary": "Get events by event handle",
        "parameters": [
          {
            "name": "address",
            "required": true,
            "in": "path",
            "description": "Hex-encoded 32 byte Aptos account, with or without a 0x prefix, for which events are queried. This refers to the account that events were emitted to, not the account hosting the move module that emits that event type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event_handle",
            "required": true,
            "in": "path",
            "description": "Name of struct to lookup event handle.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field_name",
            "required": true,
            "in": "path",
            "description": "Name of field to lookup event handle.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "example": 100,
            "description": "Max number of account resources to retrieve.\nIf not provided, defaults to default page size.",
            "schema": {
              "minimum": 1,
              "maximum": 5000,
              "nullable": true,
              "default": 100,
              "type": "number"
            }
          },
          {
            "name": "start",
            "required": false,
            "in": "query",
            "description": "Starting sequence number of events.\nIf unspecified, by default will retrieve the most recent events",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetEventsByEventHandleResponse"
                  }
                }
              }
            }
          }
        },
        "tags": ["Events"]
      }
    },
    "/transactions": {
      "get": {
        "operationId": "getTransactions",
        "summary": "Get transactions",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "example": 100,
            "description": "Max number of transactions to retrieve.\nIf not provided, defaults to default page size",
            "schema": {
              "minimum": 1,
              "maximum": 5000,
              "nullable": true,
              "default": 100,
              "type": "number"
            }
          },
          {
            "name": "start",
            "required": false,
            "in": "query",
            "description": "Account sequence number to start list of transactions.\nIf not provided, defaults to showing the latest transactions",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/PendingTransaction"
                      },
                      {
                        "$ref": "#/components/schemas/UserTransaction"
                      },
                      {
                        "$ref": "#/components/schemas/GenesisTransaction"
                      },
                      {
                        "$ref": "#/components/schemas/BlockMetadataTransaction"
                      },
                      {
                        "$ref": "#/components/schemas/StateCheckpointTransaction"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": ["Transactions"]
      },
      "post": {
        "operationId": "submitTransaction",
        "summary": "Submit transaction",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmitTransactionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PendingTransaction"
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "tags": ["Transactions"]
      }
    },
    "/transactions/by_hash/{txn_hash}": {
      "get": {
        "operationId": "getTransactionByHash",
        "summary": "Get transaction by hash",
        "parameters": [
          {
            "name": "txn_hash",
            "required": true,
            "in": "path",
            "example": "0x1f9f5ea7eff6602d39817e2cb5b481deef7510215a0781992872593662414db5",
            "description": "Hash of transaction to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PendingTransaction"
                    },
                    {
                      "$ref": "#/components/schemas/UserTransaction"
                    },
                    {
                      "$ref": "#/components/schemas/GenesisTransaction"
                    },
                    {
                      "$ref": "#/components/schemas/BlockMetadataTransaction"
                    },
                    {
                      "$ref": "#/components/schemas/StateCheckpointTransaction"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Transactions"]
      }
    },
    "/transactions/by_version/{txn_version}": {
      "get": {
        "operationId": "getTransactionByVersion",
        "summary": "Get transaction by version",
        "parameters": [
          {
            "name": "txn_version",
            "required": true,
            "in": "path",
            "example": "32425224034",
            "description": "Version of transaction to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PendingTransaction"
                    },
                    {
                      "$ref": "#/components/schemas/UserTransaction"
                    },
                    {
                      "$ref": "#/components/schemas/GenesisTransaction"
                    },
                    {
                      "$ref": "#/components/schemas/BlockMetadataTransaction"
                    },
                    {
                      "$ref": "#/components/schemas/StateCheckpointTransaction"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": ["Transactions"]
      }
    },
    "/accounts/{address}/transactions": {
      "get": {
        "operationId": "getAccountTransactions",
        "summary": "Get account transactions",
        "parameters": [
          {
            "name": "address",
            "required": true,
            "in": "path",
            "example": "0x88fbd33f54e1126269769780feb24480428179f552e2313fbe571b72e62a1ca1",
            "description": "Address of account with or without a 0x prefix",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "example": 100,
            "description": "Max number of transactions to retrieve.\nIf not provided, defaults to default page size",
            "schema": {
              "minimum": 1,
              "maximum": 5000,
              "nullable": true,
              "default": 100,
              "type": "number"
            }
          },
          {
            "name": "start",
            "required": false,
            "in": "query",
            "description": "Account sequence number to start list of transactions.\nIf not provided, defaults to showing the latest transactions",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/PendingTransaction"
                      },
                      {
                        "$ref": "#/components/schemas/UserTransaction"
                      },
                      {
                        "$ref": "#/components/schemas/GenesisTransaction"
                      },
                      {
                        "$ref": "#/components/schemas/BlockMetadataTransaction"
                      },
                      {
                        "$ref": "#/components/schemas/StateCheckpointTransaction"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": ["Transactions"]
      }
    },
    "/transactions/batch": {
      "post": {
        "operationId": "submitBatchTransactions",
        "summary": "Submit batch transactions",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubmitTransactionRequest"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmitBatchTransactionResult"
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "tags": ["Transactions"]
      }
    },
    "/transactions/simulate": {
      "post": {
        "operationId": "simulateTransaction",
        "summary": "Simulate transaction",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmitTransactionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PendingTransaction"
                    },
                    {
                      "$ref": "#/components/schemas/UserTransaction"
                    },
                    {
                      "$ref": "#/components/schemas/GenesisTransaction"
                    },
                    {
                      "$ref": "#/components/schemas/BlockMetadataTransaction"
                    },
                    {
                      "$ref": "#/components/schemas/StateCheckpointTransaction"
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "tags": ["Transactions"]
      }
    },
    "/transactions/encode_submission": {
      "post": {
        "operationId": "encodeSubmission",
        "summary": "Encode submission",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EncodeSubmissionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "0x88fbd33f54e1126269769780feb24480428179f552e2313fbe571b72e62a1ca1 "
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": ["Transactions"]
      }
    },
    "/transactions/estimate_gas_price": {
      "get": {
        "operationId": "estimateGasPrice",
        "x-tag-sdk": "transactions",
        "summary": "Estimate gas price",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimateGasPriceResult"
                }
              }
            }
          }
        },
        "tags": ["Transactions"]
      }
    },
    "/blocks/{block_height}": {
      "get": {
        "operationId": "getBlockByHeight",
        "summary": "Get block by height",
        "parameters": [
          {
            "name": "block_height",
            "required": true,
            "in": "path",
            "description": "Block height to lookup. Starts at 0",
            "example": 0,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "with_transactions",
            "required": false,
            "in": "query",
            "example": false,
            "description": "If set to true, include all transactions in the block",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns block by height",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Block"
                }
              }
            }
          }
        },
        "tags": ["Blocks"]
      }
    },
    "/blocks/by_version/{version}": {
      "get": {
        "operationId": "getBlockByVersion",
        "summary": "Get block by version",
        "parameters": [
          {
            "name": "version",
            "required": true,
            "in": "path",
            "description": "Ledger version to lookup block information for.",
            "example": 0,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "with_transactions",
            "required": false,
            "in": "query",
            "example": false,
            "description": "If set to true, include all transactions in the block",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns block by version",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Block"
                }
              }
            }
          }
        },
        "tags": ["Blocks"]
      }
    }
  },
  "info": {
    "title": "aptos-api",
    "description": "The aptos-api provider",
    "version": "1.0.0",
    "contact": {}
  },
  "tags": [],
  "servers": [
    {
      "url": "https://mainnet-aptos-api.moralis.io"
    },
    {
      "url": "https://testnet-aptos-api.moralis.io"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "NFTTokenResponse": {
        "type": "object",
        "properties": {
          "collection_data_id_hash": {
            "type": "string",
            "example": "6993fb8b5688d392a2d94127b9926519d6327e69f2bcf3dc0c5df2c060aec97d",
            "description": "The identifier of the collection",
            "maxLength": 64,
            "minLength": 64,
            "nullable": false
          },
          "collection_name": {
            "type": "string",
            "example": "Topaz Troopers",
            "description": "The name of the collection",
            "maxLength": 128,
            "minLength": 1,
            "nullable": false
          },
          "creator_address": {
            "type": "string",
            "example": "0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac",
            "description": "The address of the creator of the collection",
            "maxLength": 66,
            "minLength": 66,
            "nullable": false
          },
          "default_properties": {
            "type": "object",
            "example": "{\"point\": \"0x30\", \"author\": \"0x33454e4a4f59204c616273\"}",
            "description": "The default properties of the token",
            "nullable": true
          },
          "description": {
            "type": "string",
            "example": "A badge which proves you are an OG #TopazTrooper.",
            "description": "The description of the collection",
            "nullable": false
          },
          "description_mutable": {
            "type": "boolean",
            "example": "false",
            "description": "Whether the description can be changed",
            "nullable": false
          },
          "largest_property_version": {
            "type": "string",
            "example": "1",
            "description": "largest_property_version",
            "nullable": false
          },
          "last_transaction_timestamp": {
            "type": "string",
            "nullable": false,
            "example": "2022-09-17T22:03:32.000000Z",
            "description": "The timestamp of the last transaction"
          },
          "last_transaction_version": {
            "type": "string",
            "example": "210373856",
            "description": "The version of the last transaction",
            "nullable": false
          },
          "maximum": {
            "type": "string",
            "example": "18446744073709551615",
            "description": "The maximum number of tokens that can be minted",
            "nullable": false
          },
          "maximum_mutable": {
            "type": "boolean",
            "example": "false",
            "description": "Whether the maximum number of tokens can be changed",
            "nullable": false
          },
          "metadata_uri": {
            "type": "string",
            "example": "https://static-cdn.risewallet.io/nft/aptos-monkeys/1572.jpeg",
            "description": "The URI of the image of the token",
            "nullable": false
          },
          "name": {
            "type": "string",
            "example": "Souffl3 Testnet NFT",
            "description": "The name of the token",
            "maxLength": 128,
            "minLength": 1,
            "nullable": false
          },
          "payee_address": {
            "type": "string",
            "example": "0x0b11e89a399fa11c802099024498da9fc6512bd3d2d3068f0e78320bd6243990",
            "description": "The address that last payed for the token",
            "maxLength": 66,
            "minLength": 66,
            "nullable": false
          },
          "properties_mutable": {
            "type": "boolean",
            "example": "false",
            "description": "Whether the properties of the token can be changed",
            "nullable": false
          },
          "royalty_mutable": {
            "type": "boolean",
            "example": "false",
            "description": "Whether the royalty of the token can be changed",
            "nullable": false
          },
          "royalty_points_denominator": {
            "type": "string",
            "example": "100",
            "description": "The denominator for royalty points",
            "nullable": false
          },
          "royalty_points_numerator": {
            "type": "string",
            "example": "20",
            "description": "The numerator for royalty points",
            "nullable": false
          },
          "supply": {
            "type": "string",
            "example": "32976",
            "description": "The number of tokens minted",
            "nullable": false
          },
          "token_data_id_hash": {
            "type": "string",
            "example": "1824178d98256f40046db3db8cf462f1c0a8e0d37304218044f11e69761c88e1",
            "description": "The identifier of the token",
            "maxLength": 64,
            "minLength": 64,
            "nullable": false
          },
          "uri_mutable": {
            "type": "boolean",
            "example": "false",
            "description": "Whether the URI of the image can be changed",
            "nullable": false
          }
        },
        "required": [
          "collection_data_id_hash",
          "collection_name",
          "creator_address",
          "default_properties",
          "description",
          "description_mutable",
          "largest_property_version",
          "last_transaction_timestamp",
          "last_transaction_version",
          "maximum",
          "maximum_mutable",
          "metadata_uri",
          "name",
          "payee_address",
          "properties_mutable",
          "royalty_mutable",
          "royalty_points_denominator",
          "royalty_points_numerator",
          "supply",
          "token_data_id_hash",
          "uri_mutable"
        ]
      },
      "BadRequestResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "string",
            "description": "The status code",
            "example": "400",
            "minLength": 3,
            "maxLength": 3,
            "nullable": false
          },
          "message": {
            "nullable": true,
            "default": [],
            "example": ["creator_address must be 66 characters"],
            "description": "List of things to correct",
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "error": {
            "type": "string",
            "nullable": true,
            "example": "Bad Request",
            "description": "Type of error"
          }
        }
      },
      "NFTTokensByCollectionResponse": {
        "type": "object",
        "properties": {
          "cursor": {
            "type": "string",
            "nullable": true,
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4",
            "description": "The cursor to use for the next page of results. (Cursor is null on last page)"
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true,
            "description": "Indicates if there is a next page of results",
            "nullable": false
          },
          "result": {
            "description": "The tokens for the given collection",
            "example": [],
            "nullable": false,
            "maxItems": 100,
            "minItems": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NFTTokenResponse"
            }
          }
        },
        "required": ["cursor", "hasNextPage", "result"]
      },
      "NFTTokensByCreatorsResponse": {
        "type": "object",
        "properties": {
          "cursor": {
            "type": "string",
            "nullable": true,
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4",
            "description": "The cursor to use for the next page of results. (Cursor is null on last page)"
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true,
            "description": "Indicates if there is a next page of results",
            "nullable": false
          },
          "result": {
            "description": "The collections for the given creators",
            "example": [],
            "nullable": false,
            "maxItems": 100,
            "minItems": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NFTTokenResponse"
            }
          }
        },
        "required": ["cursor", "hasNextPage", "result"]
      },
      "NFTCollectionItemResponse": {
        "type": "object",
        "properties": {
          "collection_data_id_hash": {
            "type": "string",
            "example": "6993fb8b5688d392a2d94127b9926519d6327e69f2bcf3dc0c5df2c060aec97d",
            "description": "The identifier of the collection",
            "maxLength": 64,
            "minLength": 64,
            "nullable": false
          },
          "collection_name": {
            "type": "string",
            "example": "Topaz Troopers",
            "description": "The name of the collection",
            "maxLength": 128,
            "minLength": 1,
            "nullable": false
          },
          "creator_address": {
            "type": "string",
            "example": "0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac",
            "description": "The address of the creator of the collection",
            "maxLength": 66,
            "minLength": 66,
            "nullable": false
          },
          "description": {
            "type": "string",
            "example": "A badge which proves you are an OG #TopazTrooper.",
            "description": "The description of the collection",
            "nullable": false
          },
          "description_mutable": {
            "type": "boolean",
            "example": "false",
            "description": "Whether the description can be changed",
            "nullable": false
          },
          "last_transaction_timestamp": {
            "type": "string",
            "nullable": false,
            "example": "2022-09-17T22:03:32.000000Z",
            "description": "The timestamp of the last transaction"
          },
          "last_transaction_version": {
            "type": "string",
            "example": "210373856",
            "description": "The version of the last transaction",
            "nullable": false
          },
          "maximum": {
            "type": "string",
            "example": "18446744073709551615",
            "description": "The maximum number of tokens that can be minted",
            "nullable": false
          },
          "maximum_mutable": {
            "type": "boolean",
            "example": "false",
            "description": "Whether the maximum number of tokens can be changed",
            "nullable": false
          },
          "metadata_uri": {
            "type": "string",
            "example": "https://static-cdn.risewallet.io/nft/aptos-monkeys/1572.jpeg",
            "description": "The URI of the image of the collection",
            "nullable": false
          },
          "supply": {
            "type": "string",
            "example": "32976",
            "description": "The number of tokens minted",
            "nullable": false
          },
          "table_handle": {
            "type": "string",
            "nullable": false,
            "example": "0x293d59ded27fc85fef070b026834d2be7e7ced76c3c32ecbcd4f44b461518c30",
            "description": "The address of the table that stores the tokens"
          },
          "uri_mutable": {
            "type": "boolean",
            "example": "false",
            "description": "Whether the URI of the image can be changed",
            "nullable": false
          }
        },
        "required": [
          "collection_data_id_hash",
          "collection_name",
          "creator_address",
          "description",
          "description_mutable",
          "last_transaction_timestamp",
          "last_transaction_version",
          "maximum",
          "maximum_mutable",
          "metadata_uri",
          "supply",
          "table_handle",
          "uri_mutable"
        ]
      },
      "NFTCollectionsByNameRangeResponse": {
        "type": "object",
        "properties": {
          "cursor": {
            "type": "string",
            "nullable": true,
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4",
            "description": "The cursor to use for the next page of results. (Cursor is null on last page)"
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true,
            "description": "Indicates if there is a next page of results",
            "nullable": false
          },
          "result": {
            "description": "The collections for the given creator",
            "example": [],
            "nullable": false,
            "maxItems": 100,
            "minItems": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NFTCollectionItemResponse"
            }
          }
        },
        "required": ["cursor", "hasNextPage", "result"]
      },
      "NFTCollectionsByCreatorResponse": {
        "type": "object",
        "properties": {
          "cursor": {
            "type": "string",
            "nullable": true,
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4",
            "description": "The cursor to use for the next page of results. (Cursor is null on last page)"
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true,
            "description": "Indicates if there is a next page of results",
            "nullable": false
          },
          "result": {
            "description": "The collections for the given creator",
            "example": [],
            "nullable": false,
            "maxItems": 100,
            "minItems": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NFTCollectionItemResponse"
            }
          }
        },
        "required": ["cursor", "hasNextPage", "result"]
      },
      "NFTOwnerResponse": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "example": "2",
            "description": "The number of tokens that belonging to the owner",
            "nullable": false
          },
          "collection_data_id_hash": {
            "type": "string",
            "example": "6993fb8b5688d392a2d94127b9926519d6327e69f2bcf3dc0c5df2c060aec97d",
            "description": "The identifier of the collection",
            "maxLength": 64,
            "minLength": 64,
            "nullable": false
          },
          "collection_name": {
            "type": "string",
            "example": "Topaz Troopers",
            "description": "The name of the collection",
            "maxLength": 128,
            "minLength": 1,
            "nullable": false
          },
          "creator_address": {
            "type": "string",
            "example": "0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac",
            "description": "The address of the creator of the collection",
            "maxLength": 66,
            "minLength": 66,
            "nullable": false
          },
          "last_transaction_timestamp": {
            "type": "string",
            "nullable": false,
            "example": "2022-09-17T22:03:32.000000Z",
            "description": "The timestamp of the last transaction"
          },
          "last_transaction_version": {
            "type": "string",
            "example": "210373856",
            "description": "The version of the last transaction",
            "nullable": false
          },
          "name": {
            "type": "string",
            "example": "Topaz Troopers 123",
            "description": "The name of the token",
            "maxLength": 128,
            "minLength": 1,
            "nullable": false
          },
          "owner_address": {
            "type": "string",
            "example": "0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac",
            "description": "The address of the owner of the token",
            "maxLength": 66,
            "minLength": 66,
            "nullable": false
          },
          "property_version": {
            "type": "string",
            "example": "1",
            "description": "The property version of the token",
            "nullable": false
          },
          "table_type": {
            "type": "string",
            "example": "0x3::token::TokenStore",
            "description": "The data structure of the token",
            "nullable": false
          },
          "token_data_id_hash": {
            "type": "string",
            "example": "1824178d98256f40046db3db8cf462f1c0a8e0d37304218044f11e69761c88e1",
            "description": "The identifier of the token",
            "maxLength": 64,
            "minLength": 64,
            "nullable": false
          },
          "token_properties": {
            "type": "object",
            "example": "{\"point\": \"0x30\", \"author\": \"0x33454e4a4f59204c616273\"}",
            "description": "The properties of the token",
            "nullable": true
          }
        },
        "required": [
          "amount",
          "collection_data_id_hash",
          "collection_name",
          "creator_address",
          "last_transaction_timestamp",
          "last_transaction_version",
          "name",
          "owner_address",
          "property_version",
          "table_type",
          "token_data_id_hash",
          "token_properties"
        ]
      },
      "NFTOwnersByTokensResponse": {
        "type": "object",
        "properties": {
          "cursor": {
            "type": "string",
            "nullable": true,
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4",
            "description": "The cursor to use for the next page of results. (Cursor is null on last page)"
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true,
            "description": "Indicates if there is a next page of results",
            "nullable": false
          },
          "result": {
            "description": "The owners for the given tokens",
            "example": [],
            "nullable": false,
            "maxItems": 100,
            "minItems": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NFTOwnerResponse"
            }
          }
        },
        "required": ["cursor", "hasNextPage", "result"]
      },
      "NFTOwnersByCollectionResponse": {
        "type": "object",
        "properties": {
          "cursor": {
            "type": "string",
            "nullable": true,
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4",
            "description": "The cursor to use for the next page of results. (Cursor is null on last page)"
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true,
            "description": "Indicates if there is a next page of results",
            "nullable": false
          },
          "result": {
            "example": [],
            "description": "The owners for the given collection",
            "nullable": false,
            "maxItems": 100,
            "minItems": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NFTOwnerResponse"
            }
          }
        },
        "required": ["cursor", "hasNextPage", "result"]
      },
      "NFTOwnersOfCollectionResponse": {
        "type": "object",
        "properties": {
          "cursor": {
            "type": "string",
            "nullable": true,
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4",
            "description": "The cursor to use for the next page of results. (Cursor is null on last page)"
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true,
            "description": "Indicates if there is a next page of results",
            "nullable": false
          },
          "result": {
            "description": "The owner addresses for the given collection",
            "example": [],
            "nullable": false,
            "maxItems": 100,
            "minItems": 0,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["cursor", "hasNextPage", "result"]
      },
      "NFTTransferResponse": {
        "type": "object",
        "properties": {
          "coin_amount": {
            "type": "string",
            "nullable": false,
            "example": "2",
            "description": "The number of tokens transferred"
          },
          "coin_type": {
            "type": "string",
            "nullable": false,
            "example": null,
            "description": "The type of tokens transferred"
          },
          "collection_data_id_hash": {
            "type": "string",
            "example": "6993fb8b5688d392a2d94127b9926519d6327e69f2bcf3dc0c5df2c060aec97d",
            "description": "The identifier of the collection",
            "maxLength": 64,
            "minLength": 64,
            "nullable": false
          },
          "collection_name": {
            "type": "string",
            "example": "Topaz Troopers",
            "description": "The name of the collection",
            "maxLength": 128,
            "minLength": 1,
            "nullable": false
          },
          "creator_address": {
            "type": "string",
            "example": "0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac",
            "description": "The address of the creator of the collection",
            "maxLength": 66,
            "minLength": 66,
            "nullable": false
          },
          "event_account_address": {
            "type": "string",
            "example": "0xa748de66f1eea7d32399b59027ab0b3786295313e2c3a1608b5d51e759aee6dd",
            "description": "The account address of the transfer",
            "nullable": false
          },
          "event_creation_number": {
            "type": "string",
            "example": "2",
            "description": "The creation number of the event",
            "nullable": false
          },
          "event_sequence_number": {
            "type": "string",
            "example": "2",
            "description": "The sequence number of the event",
            "nullable": false
          },
          "from_address": {
            "type": "string",
            "nullable": false,
            "example": "0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac",
            "description": "The address sending the transfer",
            "maxLength": 66,
            "minLength": 66
          },
          "name": {
            "type": "string",
            "example": "Topaz Troopers 123",
            "description": "The name of the token",
            "maxLength": 128,
            "minLength": 1,
            "nullable": false
          },
          "property_version": {
            "type": "string",
            "example": "1",
            "description": "The property version of the token",
            "nullable": false
          },
          "to_address": {
            "type": "string",
            "nullable": false,
            "example": "0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac",
            "description": "The address recieving the transfer",
            "maxLength": 66,
            "minLength": 66
          },
          "token_amount": {
            "type": "string",
            "example": "2",
            "description": "The number of tokens transferred",
            "nullable": false
          },
          "token_data_id_hash": {
            "type": "string",
            "example": "1824178d98256f40046db3db8cf462f1c0a8e0d37304218044f11e69761c88e1",
            "description": "The identifier of the token",
            "maxLength": 64,
            "minLength": 64,
            "nullable": false
          },
          "transaction_timestamp": {
            "type": "string",
            "nullable": false,
            "example": "2022-09-17T22:03:32.000000Z",
            "description": "The timestamp of the transfer"
          },
          "transaction_version": {
            "type": "string",
            "example": "210373856",
            "description": "The version of the transaction that the transfer is a part of",
            "nullable": false
          },
          "transfer_type": {
            "type": "string",
            "example": "0x3::token::DepositEvent",
            "description": "The type of transfer",
            "nullable": false
          }
        },
        "required": [
          "coin_amount",
          "coin_type",
          "collection_data_id_hash",
          "collection_name",
          "creator_address",
          "event_account_address",
          "event_creation_number",
          "event_sequence_number",
          "from_address",
          "name",
          "property_version",
          "to_address",
          "token_amount",
          "token_data_id_hash",
          "transaction_timestamp",
          "transaction_version",
          "transfer_type"
        ]
      },
      "NFTTransfersByTokensResponse": {
        "type": "object",
        "properties": {
          "cursor": {
            "type": "string",
            "nullable": true,
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4",
            "description": "The cursor to use for the next page of results. (Cursor is null on last page)"
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true,
            "description": "Indicates if there is a next page of results",
            "nullable": false
          },
          "result": {
            "description": "The collections for the given creators",
            "example": [],
            "nullable": false,
            "maxItems": 100,
            "minItems": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NFTTransferResponse"
            }
          }
        },
        "required": ["cursor", "hasNextPage", "result"]
      },
      "GetNFTTransfersByCollectionResponse": {
        "type": "object",
        "properties": {
          "cursor": {
            "type": "string",
            "nullable": true,
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4",
            "description": "The cursor to use for the next page of results. (Cursor is null on last page)"
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true,
            "description": "Indicates if there is a next page of results",
            "nullable": false
          },
          "result": {
            "description": "The collections for the given creators",
            "example": [],
            "nullable": false,
            "maxItems": 100,
            "minItems": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NFTTransferResponse"
            }
          }
        },
        "required": ["cursor", "hasNextPage", "result"]
      },
      "GetNFTTransfersByCreatorsResponse": {
        "type": "object",
        "properties": {
          "cursor": {
            "type": "string",
            "nullable": true,
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4",
            "description": "The cursor to use for the next page of results. (Cursor is null on last page)"
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true,
            "description": "Indicates if there is a next page of results",
            "nullable": false
          },
          "result": {
            "description": "The collections for the given creators",
            "example": [],
            "nullable": false,
            "maxItems": 100,
            "minItems": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NFTTransferResponse"
            }
          }
        },
        "required": ["cursor", "hasNextPage", "result"]
      },
      "NFTTransfersByWalletsResponse": {
        "type": "object",
        "properties": {
          "cursor": {
            "type": "string",
            "nullable": true,
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4",
            "description": "The cursor to use for the next page of results. (Cursor is null on last page)"
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true,
            "description": "Indicates if there is a next page of results",
            "nullable": false
          },
          "result": {
            "description": "The collections for the given creators",
            "example": [],
            "nullable": false,
            "maxItems": 100,
            "minItems": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NFTTransferResponse"
            }
          }
        },
        "required": ["cursor", "hasNextPage", "result"]
      },
      "CoinInfoDto": {
        "type": "object",
        "properties": {
          "coin_type": {
            "type": "string",
            "example": "T0xa911c7236486be921f6cc9227b09afe4a4ad14d291ba1bb8a9b7c4d628759de::gegg::GEGG",
            "description": "The definition of the coin structure (identifier)",
            "maxLength": 5000,
            "minLength": 1,
            "nullable": false
          },
          "coin_type_hash": {
            "type": "string",
            "example": "6993fb8b5688d392a2d94127b9926519d6327e69f2bcf3dc0c5df2c060aec97d",
            "description": "The hash of the coin_type (identifier) and a known fixed length",
            "maxLength": 64,
            "minLength": 64,
            "nullable": false
          },
          "creator_address": {
            "type": "string",
            "example": "0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac",
            "description": "The address of the creator of the coin",
            "maxLength": 66,
            "minLength": 66,
            "nullable": false
          },
          "decimals": {
            "type": "number",
            "example": 8,
            "description": "The number of decimals of the coin",
            "nullable": false
          },
          "name": {
            "type": "string",
            "example": "GEGG Coin",
            "description": "The name of the Coin",
            "maxLength": 32,
            "minLength": 1,
            "nullable": false
          },
          "supply_aggregator_table_handle": {
            "type": "string",
            "nullable": false,
            "example": "0x3::token::TokenStore",
            "description": "The data structure of the token"
          },
          "supply_aggregator_table_key": {
            "type": "string",
            "nullable": false,
            "example": "0x3::token::TokenStore",
            "description": "The data structure of the token"
          },
          "symbol": {
            "type": "string",
            "example": "GEGG",
            "description": "The symbol of the coin",
            "maxLength": 10,
            "minLength": 1,
            "nullable": false
          },
          "transaction_created_timestamp": {
            "type": "string",
            "nullable": false,
            "example": "2022-09-17T22:03:32.000000Z",
            "description": "The timestamp of the transaction of when the coin was created"
          },
          "transaction_version_created": {
            "type": "string",
            "example": "210373856",
            "description": "The version of the transaction where the coin was created",
            "nullable": false
          }
        },
        "required": [
          "coin_type",
          "coin_type_hash",
          "creator_address",
          "decimals",
          "name",
          "supply_aggregator_table_handle",
          "supply_aggregator_table_key",
          "symbol",
          "transaction_created_timestamp",
          "transaction_version_created"
        ]
      },
      "GetLatestCoinsResponse": {
        "type": "object",
        "properties": {
          "cursor": {
            "type": "string",
            "nullable": true,
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4",
            "description": "The cursor to use for the next page of results. (Cursor is null on last page)"
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true,
            "description": "Indicates if there is a next page of results",
            "nullable": false
          },
          "result": {
            "description": "The coins matching the query",
            "example": [],
            "nullable": false,
            "maxItems": 100,
            "minItems": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CoinInfoDto"
            }
          }
        },
        "required": ["cursor", "hasNextPage", "result"]
      },
      "GetCoinsByNameRangeResponse": {
        "type": "object",
        "properties": {
          "cursor": {
            "type": "string",
            "nullable": true,
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4",
            "description": "The cursor to use for the next page of results. (Cursor is null on last page)"
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true,
            "description": "Indicates if there is a next page of results",
            "nullable": false
          },
          "result": {
            "description": "The coins matching the query",
            "example": [],
            "nullable": false,
            "maxItems": 100,
            "minItems": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CoinInfoDto"
            }
          }
        },
        "required": ["cursor", "hasNextPage", "result"]
      },
      "GetCoinsBySymbolRangeResponse": {
        "type": "object",
        "properties": {
          "cursor": {
            "type": "string",
            "nullable": true,
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4",
            "description": "The cursor to use for the next page of results. (Cursor is null on last page)"
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true,
            "description": "Indicates if there is a next page of results",
            "nullable": false
          },
          "result": {
            "description": "The coins matching the query",
            "example": [],
            "nullable": false,
            "maxItems": 100,
            "minItems": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CoinInfoDto"
            }
          }
        },
        "required": ["cursor", "hasNextPage", "result"]
      },
      "GetCoinsByCreatorsResponse": {
        "type": "object",
        "properties": {
          "cursor": {
            "type": "string",
            "nullable": true,
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4",
            "description": "The cursor to use for the next page of results. (Cursor is null on last page)"
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true,
            "description": "Indicates if there is a next page of results",
            "nullable": false
          },
          "result": {
            "example": [],
            "description": "The coins created by the given creators",
            "nullable": false,
            "maxItems": 100,
            "minItems": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CoinInfoDto"
            }
          }
        },
        "required": ["cursor", "hasNextPage", "result"]
      },
      "CoinTransferDto": {
        "type": "object",
        "properties": {
          "activity_type": {
            "type": "string",
            "example": "0x1::coin::WithdrawEvent",
            "description": "The definition of the coin activity",
            "maxLength": 200,
            "minLength": 1,
            "nullable": false
          },
          "amount": {
            "type": "string",
            "example": "324933484",
            "description": "The amount being transfered",
            "maxLength": 200,
            "minLength": 1,
            "nullable": false
          },
          "block_height": {
            "type": "string",
            "example": "49661526",
            "description": "The blockheight that the transfer was included in",
            "maxLength": 200,
            "minLength": 1,
            "nullable": false
          },
          "coin_type": {
            "type": "string",
            "example": "T0xa911c7236486be921f6cc9227b09afe4a4ad14d291ba1bb8a9b7c4d628759de::gegg::GEGG",
            "description": "The definition of the coin structure (identifier)",
            "maxLength": 5000,
            "minLength": 1,
            "nullable": false
          },
          "entry_function_id_str": {
            "type": "string",
            "nullable": true,
            "example": "0x563e8382514ccdcc0c0a83469c9262d22d0b052316c1bd67286ba42bb11d0815::AtodexSwapPoolV1::swap_exact_coi",
            "description": "The function that was called to transfer the coin",
            "maxLength": 100,
            "minLength": 1
          },
          "event_account_address": {
            "type": "string",
            "example": "0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac",
            "description": "The address of the event account",
            "maxLength": 66,
            "minLength": 66,
            "nullable": false
          },
          "event_creation_number": {
            "type": "string",
            "example": "9",
            "description": "The event creation number",
            "maxLength": 66,
            "minLength": 1,
            "nullable": false
          },
          "event_sequence_number": {
            "type": "string",
            "example": "59",
            "description": "The sequence number of the event",
            "maxLength": 66,
            "minLength": 1,
            "nullable": false
          },
          "is_gas_fee": {
            "type": "boolean",
            "example": false,
            "description": "If the transfer was a gas fee or not",
            "nullable": false
          },
          "is_transaction_success": {
            "type": "boolean",
            "example": true,
            "description": "If the transfer was successful or not",
            "nullable": false
          },
          "owner_address": {
            "type": "string",
            "example": "0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac",
            "description": "The address of the owner of the coin",
            "maxLength": 66,
            "minLength": 66,
            "nullable": false
          },
          "transaction_timestamp": {
            "type": "string",
            "nullable": false,
            "example": "2022-09-17T22:03:32.000000Z",
            "description": "The timestamp of the transaction of when the coin was transfered"
          },
          "transaction_version": {
            "type": "string",
            "example": "210373856",
            "description": "The version of the transaction where the coin was transfered",
            "nullable": false
          }
        },
        "required": [
          "activity_type",
          "amount",
          "block_height",
          "coin_type",
          "entry_function_id_str",
          "event_account_address",
          "event_creation_number",
          "event_sequence_number",
          "is_gas_fee",
          "is_transaction_success",
          "owner_address",
          "transaction_timestamp",
          "transaction_version"
        ]
      },
      "GetCoinTransfersByOwnerAddressesResponse": {
        "type": "object",
        "properties": {
          "cursor": {
            "type": "string",
            "nullable": true,
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4",
            "description": "The cursor to use for the next page of results. (Cursor is null on last page)"
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true,
            "description": "Indicates if there is a next page of results",
            "nullable": false
          },
          "result": {
            "example": [],
            "description": "The coins transfers for the provided owner addresses",
            "nullable": false,
            "maxItems": 100,
            "minItems": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CoinTransferDto"
            }
          }
        },
        "required": ["cursor", "hasNextPage", "result"]
      },
      "GetCoinTransfersByBlockHeightsResponse": {
        "type": "object",
        "properties": {
          "cursor": {
            "type": "string",
            "nullable": true,
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4",
            "description": "The cursor to use for the next page of results. (Cursor is null on last page)"
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true,
            "description": "Indicates if there is a next page of results",
            "nullable": false
          },
          "result": {
            "example": [],
            "description": "The coins transfers for the provided block heights",
            "nullable": false,
            "maxItems": 100,
            "minItems": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CoinTransferDto"
            }
          }
        },
        "required": ["cursor", "hasNextPage", "result"]
      },
      "GetCoinTransfersByCoinTypeResponse": {
        "type": "object",
        "properties": {
          "cursor": {
            "type": "string",
            "nullable": true,
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4",
            "description": "The cursor to use for the next page of results. (Cursor is null on last page)"
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true,
            "description": "Indicates if there is a next page of results",
            "nullable": false
          },
          "result": {
            "example": [],
            "description": "The coins transfers for the provided coin type",
            "nullable": false,
            "maxItems": 100,
            "minItems": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CoinTransferDto"
            }
          }
        },
        "required": ["cursor", "hasNextPage", "result"]
      },
      "CurrentCoinBalanceDto": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "example": "324933484",
            "description": "The amount being transfered",
            "maxLength": 200,
            "minLength": 1,
            "nullable": false
          },
          "coin_type": {
            "type": "string",
            "example": "T0xa911c7236486be921f6cc9227b09afe4a4ad14d291ba1bb8a9b7c4d628759de::gegg::GEGG",
            "description": "The definition of the coin structure (identifier)",
            "maxLength": 5000,
            "minLength": 1,
            "nullable": false
          },
          "coin_type_hash": {
            "type": "string",
            "example": "6993fb8b5688d392a2d94127b9926519d6327e69f2bcf3dc0c5df2c060aec97d",
            "description": "The hash of the coin_type (identifier) and a known fixed length",
            "maxLength": 64,
            "minLength": 64,
            "nullable": false
          },
          "last_transaction_timestamp": {
            "type": "string",
            "nullable": false,
            "example": "2022-09-17T22:03:32.000000Z",
            "description": "The timestamp of the last update to the balance"
          },
          "last_transaction_version": {
            "type": "string",
            "example": "210373856",
            "description": "The version of the transaction where the balance was last s",
            "nullable": false
          },
          "owner_address": {
            "type": "string",
            "example": "0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac",
            "description": "The address of the owner of the coin",
            "maxLength": 66,
            "minLength": 66,
            "nullable": false
          }
        },
        "required": [
          "amount",
          "coin_type",
          "coin_type_hash",
          "last_transaction_timestamp",
          "last_transaction_version",
          "owner_address"
        ]
      },
      "GetTopHoldersByCoinResponse": {
        "type": "object",
        "properties": {
          "cursor": {
            "type": "string",
            "nullable": true,
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4",
            "description": "The cursor to use for the next page of results. (Cursor is null on last page)"
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true,
            "description": "Indicates if there is a next page of results",
            "nullable": false
          },
          "result": {
            "example": [],
            "description": "The top holders of the given coin",
            "nullable": false,
            "maxItems": 100,
            "minItems": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrentCoinBalanceDto"
            }
          }
        },
        "required": ["cursor", "hasNextPage", "result"]
      },
      "GetCoinBalancesByWalletsResponse": {
        "type": "object",
        "properties": {
          "cursor": {
            "type": "string",
            "nullable": true,
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4",
            "description": "The cursor to use for the next page of results. (Cursor is null on last page)"
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true,
            "description": "Indicates if there is a next page of results",
            "nullable": false
          },
          "result": {
            "example": [],
            "description": "The coins balances for the provided wallets",
            "nullable": false,
            "maxItems": 100,
            "minItems": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrentCoinBalanceDto"
            }
          }
        },
        "required": ["cursor", "hasNextPage", "result"]
      },
      "HistoricalCoinBalanceDto": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "example": "324933484",
            "description": "The amount being transfered",
            "maxLength": 200,
            "minLength": 1,
            "nullable": false
          },
          "coin_type": {
            "type": "string",
            "example": "T0xa911c7236486be921f6cc9227b09afe4a4ad14d291ba1bb8a9b7c4d628759de::gegg::GEGG",
            "description": "The definition of the coin structure (identifier)",
            "maxLength": 5000,
            "minLength": 1,
            "nullable": false
          },
          "coin_type_hash": {
            "type": "string",
            "example": "6993fb8b5688d392a2d94127b9926519d6327e69f2bcf3dc0c5df2c060aec97d",
            "description": "The hash of the coin_type (identifier) and a known fixed length",
            "maxLength": 64,
            "minLength": 64,
            "nullable": false
          },
          "transaction_timestamp": {
            "type": "string",
            "nullable": false,
            "example": "2022-09-17T22:03:32.000000Z",
            "description": "The timestamp of the updated balance"
          },
          "transaction_version": {
            "type": "string",
            "example": "210373856",
            "description": "The version of the transaction where the balacne was updated",
            "nullable": false
          },
          "owner_address": {
            "type": "string",
            "example": "0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac",
            "description": "The address of the owner of the coin",
            "maxLength": 66,
            "minLength": 66,
            "nullable": false
          }
        },
        "required": [
          "amount",
          "coin_type",
          "coin_type_hash",
          "transaction_timestamp",
          "transaction_version",
          "owner_address"
        ]
      },
      "GetHistoricalCoinBalancesByWalletsResponse": {
        "type": "object",
        "properties": {
          "cursor": {
            "type": "string",
            "nullable": true,
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4",
            "description": "The cursor to use for the next page of results. (Cursor is null on last page)"
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true,
            "description": "Indicates if there is a next page of results",
            "nullable": false
          },
          "result": {
            "example": [],
            "description": "The coins balances for the provided wallets",
            "nullable": false,
            "maxItems": 100,
            "minItems": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HistoricalCoinBalanceDto"
            }
          }
        },
        "required": ["cursor", "hasNextPage", "result"]
      },
      "NFTsByOwnersResponse": {
        "type": "object",
        "properties": {
          "cursor": {
            "type": "string",
            "nullable": true,
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4",
            "description": "The cursor to use for the next page of results. (Cursor is null on last page)"
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true,
            "description": "Indicates if there is a next page of results",
            "nullable": false
          },
          "result": {
            "description": "The tokens for the given owners",
            "example": [],
            "nullable": false,
            "maxItems": 100,
            "minItems": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NFTOwnerResponse"
            }
          }
        },
        "required": ["cursor", "hasNextPage", "result"]
      },
      "GetAccountResponse": {
        "type": "object",
        "properties": {
          "sequence_number": {
            "type": "string",
            "example": "32425224034",
            "description": "A string containing a 64-bit unsigned integer.\nWe represent u64 values as a string to ensure compatibility with languages such as JavaScript that do not parse u64s in JSON natively."
          },
          "authentication_key": {
            "type": "string",
            "example": "0x88fbd33f54e1126269769780feb24480428179f552e2313fbe571b72e62a1ca1",
            "description": "All bytes (Vec) data is represented as hex-encoded string prefixed with 0x and fulfilled with two hex digits per byte.\nUnlike the Address type, HexEncodedBytes will not trim any zeros."
          }
        },
        "required": ["sequence_number", "authentication_key"]
      },
      "GetAccountResourceResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "0x1::coin::CoinStore<0x1::aptos_coin::AptosCoin>",
            "description": "String representation of a MoveStructTag (on-chain Move struct type). This exists so you can specify MoveStructTags as path / query parameters"
          },
          "data": {
            "type": "object",
            "example": {
              "authentication_key": "0x0000000000000000000000000000000000000000000000000000000000000001",
              "coin_register_events": {
                "counter": "0",
                "guid": {
                  "id": {
                    "addr": "0x1",
                    "creation_num": "0"
                  }
                }
              },
              "self_address": "0x1",
              "sequence_number": "0"
            },
            "description": "This is a JSON representation of some data within an account resource. More specifically, it is a map of strings to arbitrary JSON values / objects, where the keys are top level fields within the given resource."
          }
        },
        "required": ["type", "data"]
      },
      "GenericTypeParam": {
        "type": "object",
        "properties": {
          "constraints": {
            "example": [],
            "description": "Move abilities tied to the generic type param and associated with the function that uses it",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["constraints"]
      },
      "ModuleExposedFunction": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "",
            "description": "Name of the function"
          },
          "visibility": {
            "type": "string",
            "example": "private",
            "description": "Move function visibility"
          },
          "is_entry": {
            "type": "boolean",
            "example": true,
            "description": "Whether the function can be called as an entry function directly in a transaction"
          },
          "generic_type_params": {
            "example": [],
            "description": "Generic type params associated with the Move function",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GenericTypeParam"
            }
          },
          "params": {
            "example": [],
            "description": "Parameters associated with the move function",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "return": {
            "example": "",
            "description": "Return type of the function",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "name",
          "visibility",
          "is_entry",
          "generic_type_params",
          "params",
          "return"
        ]
      },
      "ModuleStructField": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "sender",
            "description": "Name of the field"
          },
          "type": {
            "type": "string",
            "example": "0x1::coin::CoinStore<0x1::aptos_coin::AptosCoin>",
            "description": "String representation of an on-chain Move type tag that is exposed in transaction payload."
          }
        },
        "required": ["name", "type"]
      },
      "ModuleStruct": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "",
            "description": "Name of the struct"
          },
          "is_native": {
            "type": "boolean",
            "example": true,
            "description": "Whether the struct is a native struct of Move"
          },
          "abilities": {
            "example": [],
            "description": "Abilities associated with the struct",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "generic_type_params": {
            "example": [],
            "description": "Generic types associated with the struct",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GenericTypeParam"
            }
          },
          "fields": {
            "example": [],
            "description": "Fields associated with the struct",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModuleStructField"
            }
          }
        },
        "required": [
          "name",
          "is_native",
          "abilities",
          "generic_type_params",
          "fields"
        ]
      },
      "MoveModuleAbi": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "example": "0x88fbd33f54e1126269769780feb24480428179f552e2313fbe571b72e62a1ca1",
            "description": "A hex encoded 32 byte Aptos account address."
          },
          "name": {
            "type": "string",
            "example": "",
            "description": ""
          },
          "friends": {
            "example": [],
            "description": "Friends of the module",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "exposed_functions": {
            "example": [],
            "description": "Public functions of the module",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModuleExposedFunction"
            }
          },
          "structs": {
            "example": [],
            "description": "Structs of the module",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModuleStruct"
            }
          }
        },
        "required": [
          "address",
          "name",
          "friends",
          "exposed_functions",
          "structs"
        ]
      },
      "GetAccountModuleResponse": {
        "type": "object",
        "properties": {
          "bytecode": {
            "type": "string",
            "example": "All bytes (Vec) data is represented as hex-encoded string prefixed with 0x and fulfilled with two hex digits per byte.",
            "description": "0x88fbd33f54e1126269769780feb24480428179f552e2313fbe571b72e62a1ca1"
          },
          "abi": {
            "example": {
              "address": "0x88fbd33f54e1126269769780feb24480428179f552e2313fbe571b72e62a1ca1 ",
              "name": "string",
              "friends": ["0x1::aptos_coin"],
              "exposed_functions": [
                {
                  "name": "string",
                  "visibility": "private",
                  "is_entry": true,
                  "generic_type_params": [
                    {
                      "constraints": ["string"]
                    }
                  ],
                  "params": ["string"],
                  "return": ["string"]
                }
              ],
              "structs": [
                {
                  "name": "string",
                  "is_native": true,
                  "abilities": ["string"],
                  "generic_type_params": [
                    {
                      "constraints": ["string"]
                    }
                  ],
                  "fields": [
                    {
                      "name": "string",
                      "type": "string"
                    }
                  ]
                }
              ]
            },
            "description": "A Move module",
            "allOf": [
              {
                "$ref": "#/components/schemas/MoveModuleAbi"
              }
            ]
          }
        },
        "required": ["bytecode", "abi"]
      },
      "TransactionEventGuid": {
        "type": "object",
        "properties": {
          "creation_number": {
            "type": "string",
            "example": "32425224034",
            "description": "A string containing a 64-bit unsigned integer.\nWe represent u64 values as a string to ensure compatibility with languages such as JavaScript that do not parse u64s in JSON natively."
          },
          "account_address": {
            "type": "string",
            "example": "0x88fbd33f54e1126269769780feb24480428179f552e2313fbe571b72e62a1ca1",
            "description": "A hex encoded 32 byte Aptos account address.\nThis is represented in a string as a 64 character hex string, sometimes shortened by stripping leading 0s, and adding a 0x."
          }
        },
        "required": ["creation_number", "account_address"]
      },
      "GetEventsByCreationNumberResponse": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "example": "32425224034",
            "description": "A string containing a 64-bit unsigned integer.\nWe represent u64 values as a string to ensure compatibility with languages such as JavaScript that do not parse u64s in JSON natively."
          },
          "guid": {
            "example": "",
            "description": "",
            "allOf": [
              {
                "$ref": "#/components/schemas/TransactionEventGuid"
              }
            ]
          },
          "sequence_number": {
            "type": "string",
            "example": "32425224034",
            "description": "A string containing a 64-bit unsigned integer.\nWe represent u64 values as a string to ensure compatibility with languages such as JavaScript that do not parse u64s in JSON natively."
          },
          "type": {
            "type": "string",
            "example": "0x1::coin::CoinStore<0x1::aptos_coin::AptosCoin>",
            "description": "String representation of an on-chain Move type tag that is exposed in transaction payload."
          },
          "data": {
            "type": "object",
            "example": {},
            "description": "The JSON representation of the event"
          }
        },
        "required": ["version", "guid", "sequence_number", "type", "data"]
      },
      "GetEventsByEventHandleResponse": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "example": "32425224034",
            "description": "A string containing a 64-bit unsigned integer.\nWe represent u64 values as a string to ensure compatibility with languages such as JavaScript that do not parse u64s in JSON natively."
          },
          "guid": {
            "example": "",
            "description": "",
            "allOf": [
              {
                "$ref": "#/components/schemas/TransactionEventGuid"
              }
            ]
          },
          "sequence_number": {
            "type": "string",
            "example": "32425224034",
            "description": "A string containing a 64-bit unsigned integer.\nWe represent u64 values as a string to ensure compatibility with languages such as JavaScript that do not parse u64s in JSON natively."
          },
          "type": {
            "type": "string",
            "example": "0x1::coin::CoinStore<0x1::aptos_coin::AptosCoin>",
            "description": "String representation of an on-chain Move type tag that is exposed in transaction payload."
          },
          "data": {
            "type": "object",
            "example": {},
            "description": "The JSON representation of the event"
          }
        },
        "required": ["version", "guid", "sequence_number", "type", "data"]
      },
      "SubmitTransactionRequest": {
        "type": "object",
        "properties": {
          "sender": {
            "type": "string",
            "description": "A hex encoded 32 byte Aptos account address."
          },
          "sequence_number": {
            "type": "string",
            "description": "A string containing a 64-bit unsigned integer."
          },
          "max_gas_amount": {
            "type": "string",
            "description": "A string containing a 64-bit unsigned integer."
          },
          "gas_unit_price": {
            "type": "string",
            "description": "A string containing a 64-bit unsigned integer."
          },
          "expiration_timestamp_secs": {
            "type": "string",
            "description": "A string containing a 64-bit unsigned integer."
          },
          "payload": {
            "description": "An enum of the possible transaction payloads",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EntryFunctionPayloadRequest"
              },
              {
                "$ref": "#/components/schemas/ScriptPayloadRequest"
              },
              {
                "$ref": "#/components/schemas/ModuleBundlePayloadRequest"
              }
            ]
          },
          "signature": {
            "description": "",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Ed25519SignatureRequest"
              },
              {
                "$ref": "#/components/schemas/MultiEd25519SignatureRequest"
              },
              {
                "$ref": "#/components/schemas/MultiAgentSignatureRequest"
              }
            ]
          }
        },
        "required": [
          "sender",
          "sequence_number",
          "max_gas_amount",
          "gas_unit_price",
          "expiration_timestamp_secs",
          "payload",
          "signature"
        ]
      },
      "PendingTransaction": {
        "type": "object",
        "properties": {
          "hash": {
            "type": "string",
            "example": "0x88fbd33f54e1126269769780feb24480428179f552e2313fbe571b72e62a1ca1",
            "description": ""
          },
          "sender": {
            "type": "string",
            "example": "0x88fbd33f54e1126269769780feb24480428179f552e2313fbe571b72e62a1ca1",
            "description": "A hex encoded 32 byte Aptos account address."
          },
          "sequence_number": {
            "type": "string",
            "example": "32425224034",
            "description": "A string containing a 64-bit unsigned integer."
          },
          "max_gas_amount": {
            "type": "string",
            "example": "32425224034",
            "description": "A string containing a 64-bit unsigned integer."
          },
          "gas_unit_price": {
            "type": "string",
            "example": "32425224034",
            "description": "A string containing a 64-bit unsigned integer."
          },
          "expiration_timestamp_secs": {
            "type": "string",
            "example": "32425224034",
            "description": "A string containing a 64-bit unsigned integer."
          },
          "payload": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EntryFunctionPayloadRequest"
              },
              {
                "$ref": "#/components/schemas/ScriptPayloadRequest"
              },
              {
                "$ref": "#/components/schemas/ModuleBundlePayloadRequest"
              }
            ]
          },
          "signature": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Ed25519SignatureRequest"
              },
              {
                "$ref": "#/components/schemas/MultiEd25519SignatureRequest"
              },
              {
                "$ref": "#/components/schemas/MultiAgentSignatureRequest"
              }
            ]
          }
        },
        "required": [
          "hash",
          "sender",
          "sequence_number",
          "max_gas_amount",
          "gas_unit_price",
          "expiration_timestamp_secs",
          "payload",
          "signature"
        ]
      },
      "SubmitBatchTransactionResult": {
        "type": "object",
        "properties": {
          "transaction_failures": {
            "example": [],
            "description": "Summary of the failed transactions",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["transaction_failures"]
      },
      "EncodeSubmissionRequest": {
        "type": "object",
        "properties": {
          "sender": {
            "type": "string",
            "description": "A hex encoded 32 byte Aptos account address."
          },
          "sequence_number": {
            "type": "string",
            "description": "A string containing a 64-bit unsigned integer."
          },
          "max_gas_amount": {
            "type": "string",
            "description": "A string containing a 64-bit unsigned integer."
          },
          "gas_unit_price": {
            "type": "string",
            "description": "A string containing a 64-bit unsigned integer."
          },
          "expiration_timestamp_secs": {
            "type": "string",
            "description": "A string containing a 64-bit unsigned integer."
          },
          "payload": {
            "description": "An enum of the possible transaction payloads",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EntryFunctionPayloadRequest"
              },
              {
                "$ref": "#/components/schemas/ScriptPayloadRequest"
              },
              {
                "$ref": "#/components/schemas/ModuleBundlePayloadRequest"
              }
            ]
          },
          "secondary_signers": {
            "description": "Secondary signer accounts of the request for Multi-agent",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "sender",
          "sequence_number",
          "max_gas_amount",
          "gas_unit_price",
          "expiration_timestamp_secs",
          "payload",
          "secondary_signers"
        ]
      },
      "EstimateGasPriceResult": {
        "type": "object",
        "properties": {
          "deprioritized_gas_estimate": {
            "type": "number",
            "example": 0,
            "description": "The deprioritized estimate for the gas unit price"
          },
          "gas_estimate": {
            "type": "number",
            "example": 0,
            "description": "The current estimate for the gas unit price"
          },
          "prioritized_gas_estimate": {
            "type": "number",
            "example": 0,
            "description": "The prioritized estimate for the gas unit price"
          }
        },
        "required": [
          "deprioritized_gas_estimate",
          "gas_estimate",
          "prioritized_gas_estimate"
        ]
      },
      "Block": {
        "type": "object",
        "properties": {
          "block_height": {
            "type": "string",
            "example": "32425224034",
            "description": "A string containing a 64-bit unsigned integer."
          },
          "block_hash": {
            "type": "string",
            "example": "32425224034",
            "description": ""
          },
          "block_timestamp": {
            "type": "string",
            "example": "32425224034",
            "description": "A string containing a 64-bit unsigned integer."
          },
          "first_version": {
            "type": "string",
            "example": "32425224034",
            "description": "A string containing a 64-bit unsigned integer."
          },
          "last_version": {
            "type": "string",
            "example": "32425224034",
            "description": "A string containing a 64-bit unsigned integer."
          },
          "transactions": {
            "type": "array",
            "description": "List of transactions",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PendingTransaction"
                },
                {
                  "$ref": "#/components/schemas/UserTransaction"
                },
                {
                  "$ref": "#/components/schemas/GenesisTransaction"
                },
                {
                  "$ref": "#/components/schemas/BlockMetadataTransaction"
                },
                {
                  "$ref": "#/components/schemas/StateCheckpointTransaction"
                }
              ]
            }
          }
        },
        "required": [
          "block_height",
          "block_hash",
          "block_timestamp",
          "first_version",
          "last_version",
          "transactions"
        ]
      },
      "EntryFunctionPayloadRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": ""
          },
          "function": {
            "type": "string",
            "description": "Entry function id is string representation of a entry function defined on-chain."
          },
          "type_arguments": {
            "description": "Type arguments of the function",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "arguments": {
            "description": "Arguments of the function",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["type", "function", "type_arguments", "arguments"]
      },
      "ScriptPayloadRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of payload"
          },
          "code": {
            "type": "object",
            "description": "Move script bytecode"
          },
          "type_arguments": {
            "description": "Type arguments of the function",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "arguments": {
            "description": "Arguments of the function",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["type", "code", "type_arguments", "arguments"]
      },
      "ModuleBundlePayloadRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": ""
          },
          "modules": {
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["type", "modules"]
      },
      "Ed25519SignatureRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": ""
          },
          "signature": {
            "type": "string",
            "description": "All bytes (Vec) data is represented as hex-encoded string prefixed with 0x and fulfilled with two hex digits per byte"
          },
          "public_key": {
            "type": "string",
            "description": "All bytes (Vec) data is represented as hex-encoded string prefixed with 0x and fulfilled with two hex digits per byte."
          }
        },
        "required": ["type", "signature", "public_key"]
      },
      "MultiEd25519SignatureRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": ""
          },
          "public_keys": {
            "description": "The public keys for the Ed25519 signature",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "signatures": {
            "description": "Signature associated with the public keys in the same order",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "threshold": {
            "type": "number",
            "description": "The number of signatures required for a successful transaction"
          },
          "bitmap": {
            "type": "string",
            "description": "All bytes (Vec) data is represented as hex-encoded string prefixed with 0x and fulfilled with two hex digits per byte."
          }
        },
        "required": ["type", "public_keys", "signatures", "threshold", "bitmap"]
      },
      "MultiAgentSignatureRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": ""
          },
          "sender": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Ed25519SignatureRequest",
                "description": "A single Ed25519 signature"
              },
              {
                "$ref": "#/components/schemas/MultiEd25519SignatureRequest",
                "description": "A Ed25519 multi-sig signature"
              }
            ]
          },
          "secondary_signer_addresses": {
            "description": "The other involved parties addresses",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "secondary_signers": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Ed25519SignatureRequest",
                "description": "A single Ed25519 signature"
              },
              {
                "$ref": "#/components/schemas/MultiEd25519SignatureRequest",
                "description": "A Ed25519 multi-sig signature"
              }
            ],
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "type",
          "sender",
          "secondary_signer_addresses",
          "secondary_signers"
        ]
      },
      "DeleteModuleChange": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "delete_module",
            "description": ""
          },
          "address": {
            "type": "object",
            "example": "0x88fbd33f54e1126269769780feb24480428179f552e2313fbe571b72e62a1ca1",
            "description": "A hex encoded 32 byte Aptos account address."
          },
          "state_key_hash": {
            "type": "string",
            "example": "",
            "description": "State key hash"
          },
          "module": {
            "type": "object",
            "example": "0x1::aptos_coin",
            "description": "Move module id is a string representation of Move module"
          }
        },
        "required": ["type", "address", "state_key_hash", "module"]
      },
      "DeleteResourceChange": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "delete_module",
            "description": ""
          },
          "address": {
            "type": "object",
            "example": "0x88fbd33f54e1126269769780feb24480428179f552e2313fbe571b72e62a1ca1",
            "description": "A hex encoded 32 byte Aptos account address."
          },
          "state_key_hash": {
            "type": "string",
            "example": "",
            "description": "State key hash"
          },
          "resource": {
            "type": "object",
            "example": "0x1::coin::CoinStore<0x1::aptos_coin::AptosCoin>",
            "description": "String representation of a MoveStructTag (on-chain Move struct type)."
          }
        },
        "required": ["type", "address", "state_key_hash", "resource"]
      },
      "DeletedTableData": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "example": "",
            "description": "Deleted key"
          },
          "key_type": {
            "type": "string",
            "example": "",
            "description": "Deleted key type"
          }
        },
        "required": ["key", "key_type"]
      },
      "DeleteTableItemChange": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "delete_module",
            "description": ""
          },
          "address": {
            "type": "object",
            "example": "0x88fbd33f54e1126269769780feb24480428179f552e2313fbe571b72e62a1ca1",
            "description": "A hex encoded 32 byte Aptos account address."
          },
          "state_key_hash": {
            "type": "string",
            "example": "",
            "description": "State key hash"
          },
          "handle": {
            "type": "object",
            "example": "0x88fbd33f54e1126269769780feb24480428179f552e2313fbe571b72e62a1ca1",
            "description": "All bytes (Vec) data is represented as hex-encoded string prefixed with 0x and fulfilled with two hex digits per byte."
          },
          "key": {
            "type": "object",
            "example": "0x88fbd33f54e1126269769780feb24480428179f552e2313fbe571b72e62a1ca1",
            "description": "All bytes (Vec) data is represented as hex-encoded string prefixed with 0x and fulfilled with two hex digits per byte."
          },
          "data": {
            "example": {},
            "description": "Deleted table data",
            "allOf": [
              {
                "$ref": "#/components/schemas/DeletedTableData"
              }
            ]
          }
        },
        "required": [
          "type",
          "address",
          "state_key_hash",
          "handle",
          "key",
          "data"
        ]
      },
      "WriteModuleData": {
        "type": "object",
        "properties": {
          "bytecode": {
            "type": "string",
            "example": "0x88fbd33f54e1126269769780feb24480428179f552e2313fbe571b72e62a1ca1",
            "description": "All bytes (Vec) data is represented as hex-encoded string prefixed with 0x and fulfilled with two hex digits per byte."
          },
          "abi": {
            "example": {},
            "description": "",
            "allOf": [
              {
                "$ref": "#/components/schemas/MoveModuleAbi"
              }
            ]
          }
        },
        "required": ["bytecode", "abi"]
      },
      "WriteOrUpdateModuleChange": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "delete_module",
            "description": ""
          },
          "address": {
            "type": "object",
            "example": "0x88fbd33f54e1126269769780feb24480428179f552e2313fbe571b72e62a1ca1",
            "description": "A hex encoded 32 byte Aptos account address."
          },
          "state_key_hash": {
            "type": "string",
            "example": "",
            "description": "State key hash"
          },
          "data": {
            "example": "",
            "description": "",
            "allOf": [
              {
                "$ref": "#/components/schemas/WriteModuleData"
              }
            ]
          }
        },
        "required": ["type", "address", "state_key_hash", "data"]
      },
      "DecodedTableData": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "example": "",
            "description": "Key of table in JSON"
          },
          "key_type": {
            "type": "string",
            "example": "",
            "description": "Type of key"
          },
          "value": {
            "type": "string",
            "example": "",
            "description": "Value of table in JSON"
          },
          "value_type": {
            "type": "string",
            "example": "",
            "description": "Type of value"
          }
        },
        "required": ["key", "key_type", "value", "value_type"]
      },
      "WriteTableChangeSetChange": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "delete_module",
            "description": ""
          },
          "address": {
            "type": "string",
            "example": "0x88fbd33f54e1126269769780feb24480428179f552e2313fbe571b72e62a1ca1",
            "description": "A hex encoded 32 byte Aptos account address."
          },
          "state_key_hash": {
            "type": "string",
            "example": "",
            "description": "State key hash"
          },
          "handle": {
            "type": "string",
            "example": "0x88fbd33f54e1126269769780feb24480428179f552e2313fbe571b72e62a1ca1",
            "description": "All bytes (Vec) data is represented as hex-encoded string prefixed with 0x and fulfilled with two hex digits per byte."
          },
          "key": {
            "type": "string",
            "example": "0x88fbd33f54e1126269769780feb24480428179f552e2313fbe571b72e62a1ca1",
            "description": "All bytes (Vec) data is represented as hex-encoded string prefixed with 0x and fulfilled with two hex digits per byte."
          },
          "value": {
            "type": "string",
            "example": "0x88fbd33f54e1126269769780feb24480428179f552e2313fbe571b72e62a1ca1",
            "description": "All bytes (Vec) data is represented as hex-encoded string prefixed with 0x and fulfilled with two hex digits per byte."
          },
          "data": {
            "example": "",
            "description": "",
            "allOf": [
              {
                "$ref": "#/components/schemas/DecodedTableData"
              }
            ]
          }
        },
        "required": [
          "type",
          "address",
          "state_key_hash",
          "handle",
          "key",
          "value",
          "data"
        ]
      },
      "TransactionEvent": {
        "type": "object",
        "properties": {
          "guid": {
            "example": "",
            "description": "",
            "allOf": [
              {
                "$ref": "#/components/schemas/TransactionEventGuid"
              }
            ]
          },
          "sequence_number": {
            "type": "string",
            "example": "32425224034",
            "description": "A string containing a 64-bit unsigned integer."
          },
          "type": {
            "type": "string",
            "example": "0x1::account::Account",
            "description": "String representation of an on-chain Move type tag that is exposed in transaction payload."
          },
          "data": {
            "type": "string",
            "example": {},
            "description": "The JSON representation of the event"
          }
        },
        "required": ["guid", "sequence_number", "type", "data"]
      },
      "UserTransaction": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "",
            "description": "user_transaction"
          },
          "version": {
            "type": "string",
            "example": "32425224034",
            "description": "A string containing a 64-bit unsigned integer."
          },
          "hash": {
            "type": "string",
            "example": "0x88fbd33f54e1126269769780feb24480428179f552e2313fbe571b72e62a1ca1",
            "description": ""
          },
          "state_change_hash": {
            "type": "string",
            "example": "",
            "description": ""
          },
          "event_root_hash": {
            "type": "string",
            "example": "",
            "description": ""
          },
          "state_checkpoint_hash": {
            "type": "string",
            "example": "",
            "description": ""
          },
          "gas_used": {
            "type": "string",
            "example": "32425224034",
            "description": "A string containing a 64-bit unsigned integer."
          },
          "success": {
            "type": "boolean",
            "example": true,
            "description": "Whether the transaction was successful"
          },
          "vm_status": {
            "type": "string",
            "example": "",
            "description": "The VM status of the transaction, can tell useful information in a failure"
          },
          "accumulator_root_hash": {
            "type": "string",
            "example": "",
            "description": ""
          },
          "changes": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DeleteModuleChange"
              },
              {
                "$ref": "#/components/schemas/DeleteResourceChange"
              },
              {
                "$ref": "#/components/schemas/DeleteTableItemChange"
              },
              {
                "$ref": "#/components/schemas/WriteOrUpdateModuleChange"
              },
              {
                "$ref": "#/components/schemas/WriteTableChangeSetChange"
              }
            ],
            "items": {
              "type": "string"
            }
          },
          "sender": {
            "type": "string",
            "example": "0x88fbd33f54e1126269769780feb24480428179f552e2313fbe571b72e62a1ca1",
            "description": "A hex encoded 32 byte Aptos account address."
          },
          "sequence_number": {
            "type": "string",
            "example": "32425224034",
            "description": "A string containing a 64-bit unsigned integer."
          },
          "max_gas_amount": {
            "type": "string",
            "example": "32425224034",
            "description": "A string containing a 64-bit unsigned integer."
          },
          "gas_unit_price": {
            "type": "string",
            "example": "32425224034",
            "description": "A string containing a 64-bit unsigned integer."
          },
          "expiration_timestamp_secs": {
            "type": "string",
            "example": "32425224034",
            "description": "A string containing a 64-bit unsigned integer."
          },
          "payload": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EntryFunctionPayloadRequest"
              },
              {
                "$ref": "#/components/schemas/ScriptPayloadRequest"
              },
              {
                "$ref": "#/components/schemas/ModuleBundlePayloadRequest"
              }
            ]
          },
          "signature": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Ed25519SignatureRequest"
              },
              {
                "$ref": "#/components/schemas/MultiEd25519SignatureRequest"
              },
              {
                "$ref": "#/components/schemas/MultiAgentSignatureRequest"
              }
            ]
          },
          "events": {
            "example": "",
            "description": "Events generated by the transaction",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionEvent"
            }
          },
          "timestamp": {
            "type": "string",
            "example": "32425224034",
            "description": "A string containing a 64-bit unsigned integer."
          }
        },
        "required": [
          "type",
          "version",
          "hash",
          "state_change_hash",
          "event_root_hash",
          "state_checkpoint_hash",
          "gas_used",
          "success",
          "vm_status",
          "accumulator_root_hash",
          "changes",
          "sender",
          "sequence_number",
          "max_gas_amount",
          "gas_unit_price",
          "expiration_timestamp_secs",
          "payload",
          "signature",
          "events",
          "timestamp"
        ]
      },
      "WriteSetPayload": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": ""
          },
          "write_set": {
            "description": "The associated writeset with a payload",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ScriptWriteSet"
              },
              {
                "$ref": "#/components/schemas/DirectWriteSet"
              }
            ]
          }
        },
        "required": ["type", "write_set"]
      },
      "GenesisTransaction": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "genesis_transaction",
            "description": ""
          },
          "version": {
            "type": "string",
            "example": "32425224034",
            "description": "A string containing a 64-bit unsigned integer."
          },
          "hash": {
            "type": "string",
            "example": "0x88fbd33f54e1126269769780feb24480428179f552e2313fbe571b72e62a1ca1",
            "description": ""
          },
          "state_change_hash": {
            "type": "string",
            "example": "",
            "description": ""
          },
          "event_root_hash": {
            "type": "string",
            "example": "",
            "description": ""
          },
          "state_checkpoint_hash": {
            "type": "string",
            "example": "",
            "description": ""
          },
          "gas_used": {
            "type": "string",
            "example": "32425224034",
            "description": "A string containing a 64-bit unsigned integer."
          },
          "success": {
            "type": "boolean",
            "example": true,
            "description": "Whether the transaction was successful"
          },
          "vm_status": {
            "type": "string",
            "example": "",
            "description": "The VM status of the transaction, can tell useful information in a failure"
          },
          "accumulator_root_hash": {
            "type": "string",
            "example": "",
            "description": ""
          },
          "changes": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DeleteModuleChange"
              },
              {
                "$ref": "#/components/schemas/DeleteResourceChange"
              },
              {
                "$ref": "#/components/schemas/DeleteTableItemChange"
              },
              {
                "$ref": "#/components/schemas/WriteOrUpdateModuleChange"
              },
              {
                "$ref": "#/components/schemas/WriteTableChangeSetChange"
              }
            ],
            "items": {
              "type": "string"
            }
          },
          "payload": {
            "description": "A writeset payload, used only for genesis",
            "allOf": [
              {
                "$ref": "#/components/schemas/WriteSetPayload"
              }
            ]
          },
          "events": {
            "example": "",
            "description": "Events generated by the transaction",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionEvent"
            }
          }
        },
        "required": [
          "type",
          "version",
          "hash",
          "state_change_hash",
          "event_root_hash",
          "state_checkpoint_hash",
          "gas_used",
          "success",
          "vm_status",
          "accumulator_root_hash",
          "changes",
          "payload",
          "events"
        ]
      },
      "BlockMetadataTransaction": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "block_metadata_transaction",
            "description": ""
          },
          "version": {
            "type": "string",
            "example": "32425224034",
            "description": "A string containing a 64-bit unsigned integer."
          },
          "hash": {
            "type": "string",
            "example": "0x88fbd33f54e1126269769780feb24480428179f552e2313fbe571b72e62a1ca1",
            "description": ""
          },
          "state_change_hash": {
            "type": "string",
            "example": "",
            "description": ""
          },
          "event_root_hash": {
            "type": "string",
            "example": "",
            "description": ""
          },
          "state_checkpoint_hash": {
            "type": "string",
            "example": "",
            "description": ""
          },
          "gas_used": {
            "type": "string",
            "example": "32425224034",
            "description": "A string containing a 64-bit unsigned integer."
          },
          "success": {
            "type": "boolean",
            "example": true,
            "description": "Whether the transaction was successful"
          },
          "vm_status": {
            "type": "string",
            "example": "",
            "description": "The VM status of the transaction, can tell useful information in a failure"
          },
          "accumulator_root_hash": {
            "type": "string",
            "example": "",
            "description": ""
          },
          "changes": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DeleteModuleChange"
              },
              {
                "$ref": "#/components/schemas/DeleteResourceChange"
              },
              {
                "$ref": "#/components/schemas/DeleteTableItemChange"
              },
              {
                "$ref": "#/components/schemas/WriteOrUpdateModuleChange"
              },
              {
                "$ref": "#/components/schemas/WriteTableChangeSetChange"
              }
            ],
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string",
            "example": "",
            "description": ""
          },
          "epoch": {
            "type": "string",
            "example": "32425224034",
            "description": "A string containing a 64-bit unsigned integer."
          },
          "round": {
            "type": "string",
            "example": "32425224034",
            "description": "A string containing a 64-bit unsigned integer."
          },
          "events": {
            "example": [],
            "description": "he events emitted at the block creation",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionEvent"
            }
          },
          "previous_block_votes_bitvec": {
            "example": "",
            "description": "Previous block votes",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "proposer": {
            "type": "string",
            "example": "0x88fbd33f54e1126269769780feb24480428179f552e2313fbe571b72e62a1ca1",
            "description": "A hex encoded 32 byte Aptos account address.S"
          },
          "failed_proposer_indices": {
            "example": [],
            "description": "The indices of the proposers who failed to propose",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "timestamp": {
            "type": "string",
            "example": "32425224034",
            "description": "A string containing a 64-bit unsigned integer"
          }
        },
        "required": [
          "type",
          "version",
          "hash",
          "state_change_hash",
          "event_root_hash",
          "state_checkpoint_hash",
          "gas_used",
          "success",
          "vm_status",
          "accumulator_root_hash",
          "changes",
          "id",
          "epoch",
          "round",
          "events",
          "previous_block_votes_bitvec",
          "proposer",
          "failed_proposer_indices",
          "timestamp"
        ]
      },
      "StateCheckpointTransaction": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "state_checkpoint_transaction",
            "description": ""
          },
          "version": {
            "type": "string",
            "example": "32425224034",
            "description": "A string containing a 64-bit unsigned integer."
          },
          "hash": {
            "type": "string",
            "example": "0x88fbd33f54e1126269769780feb24480428179f552e2313fbe571b72e62a1ca1",
            "description": ""
          },
          "state_change_hash": {
            "type": "string",
            "example": "",
            "description": ""
          },
          "event_root_hash": {
            "type": "string",
            "example": "",
            "description": ""
          },
          "state_checkpoint_hash": {
            "type": "string",
            "example": "",
            "description": ""
          },
          "gas_used": {
            "type": "string",
            "example": "32425224034",
            "description": "A string containing a 64-bit unsigned integer."
          },
          "success": {
            "type": "boolean",
            "example": true,
            "description": "Whether the transaction was successful"
          },
          "vm_status": {
            "type": "string",
            "example": "",
            "description": "The VM status of the transaction, can tell useful information in a failure"
          },
          "accumulator_root_hash": {
            "type": "string",
            "example": "",
            "description": ""
          },
          "changes": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DeleteModuleChange"
              },
              {
                "$ref": "#/components/schemas/DeleteResourceChange"
              },
              {
                "$ref": "#/components/schemas/DeleteTableItemChange"
              },
              {
                "$ref": "#/components/schemas/WriteOrUpdateModuleChange"
              },
              {
                "$ref": "#/components/schemas/WriteTableChangeSetChange"
              }
            ],
            "items": {
              "type": "string"
            }
          },
          "timestamp": {
            "type": "string",
            "example": "32425224034",
            "description": "A string containing a 64-bit unsigned integer."
          }
        },
        "required": [
          "type",
          "version",
          "hash",
          "state_change_hash",
          "event_root_hash",
          "state_checkpoint_hash",
          "gas_used",
          "success",
          "vm_status",
          "accumulator_root_hash",
          "changes",
          "timestamp"
        ]
      },
      "ScriptWriteSet": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": ""
          },
          "execute_as": {
            "type": "string",
            "description": "A hex encoded 32 byte Aptos account address."
          },
          "script": {
            "description": "Payload which runs a script that can run multiple functions",
            "allOf": [
              {
                "$ref": "#/components/schemas/ScriptPayloadRequest"
              }
            ]
          }
        },
        "required": ["type", "execute_as", "script"]
      },
      "DirectWriteSet": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": ""
          },
          "changes": {
            "description": "",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DeleteModuleChange"
              },
              {
                "$ref": "#/components/schemas/DeleteResourceChange"
              },
              {
                "$ref": "#/components/schemas/DeleteTableItemChange"
              },
              {
                "$ref": "#/components/schemas/WriteOrUpdateModuleChange"
              },
              {
                "$ref": "#/components/schemas/WriteTableChangeSetChange"
              }
            ],
            "items": {
              "type": "string"
            }
          },
          "events": {
            "description": "Events emitted during genesis",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionEvent"
            }
          }
        },
        "required": ["type", "changes", "events"]
      }
    }
  }
}
