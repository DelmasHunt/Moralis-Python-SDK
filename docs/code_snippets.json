{
    "evm_api": {
        "token": {
            "get_wallet_token_transfers": "from moralis import evm_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"address\": \"\", \n    \"chain\": \"eth\", \n    \"subdomain\": \"\", \n    \"from_block\": 0, \n    \"to_block\": 0, \n    \"from_date\": \"\", \n    \"to_date\": \"\", \n    \"limit\": 0, \n    \"cursor\": \"\", \n}\n\nresult = evm_api.token.get_wallet_token_transfers(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n",
            "get_token_metadata": "from moralis import evm_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"addresses\": [], \n    \"chain\": \"eth\", \n    \"subdomain\": \"\", \n    \"providerUrl\": \"\", \n}\n\nresult = evm_api.token.get_token_metadata(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n",
            "get_token_transfers": "from moralis import evm_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"address\": \"\", \n    \"chain\": \"eth\", \n    \"subdomain\": \"\", \n    \"from_block\": 0, \n    \"to_block\": 0, \n    \"from_date\": \"\", \n    \"to_date\": \"\", \n    \"offset\": 0, \n    \"limit\": 0, \n}\n\nresult = evm_api.token.get_token_transfers(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n",
            "get_token_metadata_by_symbol": "from moralis import evm_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"symbols\": [], \n    \"chain\": \"eth\", \n    \"subdomain\": \"\", \n}\n\nresult = evm_api.token.get_token_metadata_by_symbol(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n",
            "get_token_price": "from moralis import evm_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"address\": \"\", \n    \"chain\": \"eth\", \n    \"providerUrl\": \"\", \n    \"exchange\": \"\", \n    \"to_block\": 0, \n}\n\nresult = evm_api.token.get_token_price(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n",
            "get_wallet_token_balances": "from moralis import evm_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"address\": \"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e\", \n    \"chain\": \"eth\", \n    \"subdomain\": \"\", \n    \"to_block\": 1.2, \n    \"token_addresses\": [], \n}\n\nresult = evm_api.token.get_wallet_token_balances(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n",
            "get_token_allowance": "from moralis import evm_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"address\": \"\", \n    \"owner_address\": \"\", \n    \"spender_address\": \"\", \n    \"chain\": \"eth\", \n    \"providerUrl\": \"\", \n}\n\nresult = evm_api.token.get_token_allowance(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n"
        },
        "transaction": {
            "get_wallet_transactions": "from moralis import evm_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"address\": \"\", \n    \"chain\": \"eth\", \n    \"subdomain\": \"\", \n    \"from_block\": 0, \n    \"to_block\": 0, \n    \"from_date\": \"\", \n    \"to_date\": \"\", \n    \"cursor\": \"\", \n    \"limit\": 0, \n}\n\nresult = evm_api.transaction.get_wallet_transactions(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n",
            "get_transaction": "from moralis import evm_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"transaction_hash\": \"0xdc85cb1b75fd09c2f6d001fea4aba83764193cbd7881a1fa8ccde350a5681109\", \n    \"chain\": \"eth\", \n    \"subdomain\": \"\", \n}\n\nresult = evm_api.transaction.get_transaction(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n"
        },
        "resolve": {
            "resolve_domain": "from moralis import evm_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"domain\": \"brad.crypto\", \n    \"currency\": \"eth\", \n}\n\nresult = evm_api.resolve.resolve_domain(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n",
            "resolve_address": "from moralis import evm_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"address\": \"0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045\", \n}\n\nresult = evm_api.resolve.resolve_address(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n"
        },
        "nft": {
            "re_sync_metadata": "from moralis import evm_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"address\": \"\", \n    \"token_id\": \"\", \n    \"chain\": \"eth\", \n    \"flag\": \"URI\", \n    \"mode\": \"sync\", \n}\n\nresult = evm_api.nft.re_sync_metadata(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n",
            "get_contract_nfts": "from moralis import evm_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"address\": \"\", \n    \"chain\": \"eth\", \n    \"format\": \"decimal\", \n    \"limit\": 0, \n    \"totalRanges\": 0, \n    \"range\": 0, \n    \"cursor\": \"\", \n    \"normalizeMetadata\": True, \n}\n\nresult = evm_api.nft.get_contract_nfts(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n",
            "get_nft_transfers": "from moralis import evm_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"address\": \"\", \n    \"token_id\": \"\", \n    \"chain\": \"eth\", \n    \"format\": \"decimal\", \n    \"limit\": 0, \n    \"cursor\": \"\", \n}\n\nresult = evm_api.nft.get_nft_transfers(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n",
            "get_nft_owners": "from moralis import evm_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"address\": \"\", \n    \"chain\": \"eth\", \n    \"format\": \"decimal\", \n    \"limit\": 0, \n    \"cursor\": \"\", \n    \"normalizeMetadata\": True, \n}\n\nresult = evm_api.nft.get_nft_owners(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n",
            "get_nft_token_id_owners": "from moralis import evm_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"address\": \"\", \n    \"token_id\": \"\", \n    \"chain\": \"eth\", \n    \"format\": \"decimal\", \n    \"limit\": 0, \n    \"cursor\": \"\", \n    \"normalizeMetadata\": True, \n}\n\nresult = evm_api.nft.get_nft_token_id_owners(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n",
            "get_wallet_nft_collections": "from moralis import evm_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"address\": \"\", \n    \"chain\": \"eth\", \n    \"limit\": 0, \n    \"cursor\": \"\", \n}\n\nresult = evm_api.nft.get_wallet_nft_collections(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n",
            "get_nft_transfers_by_block": "from moralis import evm_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"block_number_or_hash\": \"\", \n    \"chain\": \"eth\", \n    \"subdomain\": \"\", \n    \"limit\": 0, \n    \"cursor\": \"\", \n}\n\nresult = evm_api.nft.get_nft_transfers_by_block(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n",
            "get_nft_contract_metadata": "from moralis import evm_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"address\": \"\", \n    \"chain\": \"eth\", \n}\n\nresult = evm_api.nft.get_nft_contract_metadata(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n",
            "get_nft_contract_transfers": "from moralis import evm_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"address\": \"\", \n    \"chain\": \"eth\", \n    \"format\": \"decimal\", \n    \"limit\": 0, \n    \"cursor\": \"\", \n}\n\nresult = evm_api.nft.get_nft_contract_transfers(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n",
            "sync_nft_contract": "from moralis import evm_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"address\": \"\", \n    \"chain\": \"eth\", \n}\n\nresult = evm_api.nft.sync_nft_contract(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n",
            "get_nft_metadata": "from moralis import evm_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"address\": \"\", \n    \"token_id\": \"\", \n    \"chain\": \"eth\", \n    \"format\": \"decimal\", \n    \"normalizeMetadata\": True, \n}\n\nresult = evm_api.nft.get_nft_metadata(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n",
            "get_nft_transfers_from_to_block": "from moralis import evm_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"chain\": \"eth\", \n    \"from_block\": 0, \n    \"to_block\": 0, \n    \"from_date\": \"\", \n    \"to_date\": \"\", \n    \"format\": \"decimal\", \n    \"limit\": 0, \n    \"cursor\": \"\", \n}\n\nresult = evm_api.nft.get_nft_transfers_from_to_block(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n",
            "get_wallet_nft_transfers": "from moralis import evm_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"address\": \"\", \n    \"chain\": \"eth\", \n    \"format\": \"decimal\", \n    \"direction\": \"both\", \n    \"from_block\": 0, \n    \"to_block\": \"\", \n    \"limit\": 0, \n    \"cursor\": \"\", \n}\n\nresult = evm_api.nft.get_wallet_nft_transfers(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n",
            "get_nft_lowest_price": "from moralis import evm_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"address\": \"0xa2107fa5b38d9bbd2c461d6edf11b11a50f6b974\", \n    \"chain\": \"eth\", \n    \"days\": 0, \n    \"provider_url\": \"\", \n    \"marketplace\": \"opensea\", \n}\n\nresult = evm_api.nft.get_nft_lowest_price(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n",
            "get_nft_trades": "from moralis import evm_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"address\": \"0xa2107fa5b38d9bbd2c461d6edf11b11a50f6b974\", \n    \"chain\": \"eth\", \n    \"from_block\": 0, \n    \"to_block\": \"\", \n    \"from_date\": \"\", \n    \"to_date\": \"\", \n    \"provider_url\": \"\", \n    \"marketplace\": \"opensea\", \n    \"cursor\": \"\", \n    \"limit\": 0, \n}\n\nresult = evm_api.nft.get_nft_trades(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n",
            "search_nfts": "from moralis import evm_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"q\": \"\", \n    \"chain\": \"eth\", \n    \"format\": \"decimal\", \n    \"filter\": \"name\", \n    \"from_block\": 0, \n    \"to_block\": 0, \n    \"from_date\": \"\", \n    \"to_date\": \"\", \n    \"addresses\": [], \n    \"cursor\": \"\", \n    \"limit\": 0, \n}\n\nresult = evm_api.nft.search_nfts(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n",
            "get_wallet_nfts": "from moralis import evm_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"address\": \"\", \n    \"chain\": \"eth\", \n    \"format\": \"decimal\", \n    \"limit\": 0, \n    \"token_addresses\": [], \n    \"cursor\": \"\", \n    \"normalizeMetadata\": True, \n}\n\nresult = evm_api.nft.get_wallet_nfts(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n"
        },
        "ipfs": {
            "upload_folder": "from moralis import evm_api\n\napi_key = \"YOUR_API_KEY\"\nbody = [{\n    \"path\": \"moralis/logo.jpg\", \n    \"content\": \"iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAAApgAAAKYB3X3\", \n}]\n\nresult = evm_api.ipfs.upload_folder(\n    api_key=api_key,\n    body=body,\n)\n\nprint(result)\n"
        },
        "balance": {
            "get_native_balance": "from moralis import evm_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"address\": \"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e\", \n    \"chain\": \"eth\", \n    \"providerUrl\": \"\", \n    \"to_block\": 1.2, \n}\n\nresult = evm_api.balance.get_native_balance(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n"
        },
        "utils": {
            "run_contract_function": "from moralis import evm_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"address\": \"\", \n    \"function_name\": \"\", \n    \"chain\": \"eth\", \n    \"subdomain\": \"\", \n    \"providerUrl\": \"\", \n}\nbody = {\n    \"abi\": [], \n    \"params\": {}, \n}\n\nresult = evm_api.utils.run_contract_function(\n    api_key=api_key,\n    params=params,\n    body=body,\n)\n\nprint(result)\n",
            "endpoint_weights": "from moralis import evm_api\n\napi_key = \"YOUR_API_KEY\"\n\nresult = evm_api.utils.endpoint_weights(\n    api_key=api_key,\n)\n\nprint(result)\n",
            "web3_api_version": "from moralis import evm_api\n\napi_key = \"YOUR_API_KEY\"\n\nresult = evm_api.utils.web3_api_version(\n    api_key=api_key,\n)\n\nprint(result)\n"
        },
        "events": {
            "get_contract_events": "from moralis import evm_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"address\": \"\", \n    \"topic\": \"\", \n    \"chain\": \"eth\", \n    \"subdomain\": \"\", \n    \"providerUrl\": \"\", \n    \"from_block\": 0, \n    \"to_block\": 0, \n    \"from_date\": \"\", \n    \"to_date\": \"\", \n    \"offset\": 0, \n    \"limit\": 0, \n}\nbody = \"\"\n\nresult = evm_api.events.get_contract_events(\n    api_key=api_key,\n    params=params,\n    body=body,\n)\n\nprint(result)\n",
            "get_contract_logs": "from moralis import evm_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"address\": \"\", \n    \"chain\": \"eth\", \n    \"subdomain\": \"\", \n    \"block_number\": \"\", \n    \"from_block\": \"\", \n    \"to_block\": \"\", \n    \"from_date\": \"\", \n    \"to_date\": \"\", \n    \"topic0\": \"\", \n    \"topic1\": \"\", \n    \"topic2\": \"\", \n    \"topic3\": \"\", \n    \"limit\": 0, \n    \"cursor\": \"\", \n}\n\nresult = evm_api.events.get_contract_logs(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n"
        },
        "defi": {
            "get_pair_address": "from moralis import evm_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"exchange\": \"uniswapv2\", \n    \"token0_address\": \"0x2b591e99afe9f32eaa6214f7b7629768c40eeb39\", \n    \"token1_address\": \"0xdac17f958d2ee523a2206206994597c13d831ec7\", \n    \"chain\": \"eth\", \n    \"to_block\": \"\", \n    \"to_date\": \"\", \n}\n\nresult = evm_api.defi.get_pair_address(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n",
            "get_pair_reserves": "from moralis import evm_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"pair_address\": \"0xa2107fa5b38d9bbd2c461d6edf11b11a50f6b974\", \n    \"chain\": \"eth\", \n    \"to_block\": \"\", \n    \"to_date\": \"\", \n    \"provider_url\": \"\", \n}\n\nresult = evm_api.defi.get_pair_reserves(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n"
        },
        "block": {
            "get_block": "from moralis import evm_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"block_number_or_hash\": \"\", \n    \"chain\": \"eth\", \n    \"subdomain\": \"\", \n}\n\nresult = evm_api.block.get_block(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n",
            "get_date_to_block": "from moralis import evm_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"date\": \"\", \n    \"chain\": \"eth\", \n    \"providerUrl\": \"\", \n}\n\nresult = evm_api.block.get_date_to_block(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n"
        }
    },
    "sol_api": {
        "token": {
            "get_token_price": "from moralis import sol_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"address\": \"\", \n    \"network\": \"\", \n}\n\nresult = sol_api.token.get_token_price(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n"
        },
        "nft": {
            "get_nft_metadata": "from moralis import sol_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"address\": \"\", \n    \"network\": \"\", \n}\n\nresult = sol_api.nft.get_nft_metadata(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n"
        },
        "account": {
            "get_portfolio": "from moralis import sol_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"address\": \"\", \n    \"network\": \"\", \n}\n\nresult = sol_api.account.get_portfolio(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n",
            "get_nfts": "from moralis import sol_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"network\": \"\", \n    \"address\": \"\", \n}\n\nresult = sol_api.account.get_nfts(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n",
            "get_spl": "from moralis import sol_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"network\": \"\", \n    \"address\": \"\", \n}\n\nresult = sol_api.account.get_spl(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n",
            "balance": "from moralis import sol_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"network\": \"\", \n    \"address\": \"\", \n}\n\nresult = sol_api.account.balance(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n"
        }
    },
    "auth": {
        "challenge": {
            "request_challenge_solana": "from moralis import auth\n\napi_key = \"YOUR_API_KEY\"\nbody = {\n    \"domain\": \"defi.finance\", \n    \"network\": \"mainnet\", \n    \"address\": \"26qv4GCcx98RihuK3c4T6ozB3J7L6VwCuFVc7Ta2A3Uo\", \n    \"statement\": \"Please confirm\", \n    \"uri\": \"https://defi.finance/\", \n    \"expirationTime\": \"2020-01-01T00:00:00.000Z\", \n    \"notBefore\": \"2020-01-01T00:00:00.000Z\", \n    \"resources\": ['https://docs.moralis.io/'], \n    \"timeout\": 15, \n}\n\nresult = auth.challenge.request_challenge_solana(\n    api_key=api_key,\n    body=body,\n)\n\nprint(result)\n",
            "verify_challenge_evm": "from moralis import auth\n\napi_key = \"YOUR_API_KEY\"\nbody = {\n    \"message\": \"\", \n    \"signature\": \"0x1234567890abcdef0123456789abcdef1234567890abcdef\", \n}\n\nresult = auth.challenge.verify_challenge_evm(\n    api_key=api_key,\n    body=body,\n)\n\nprint(result)\n",
            "verify_challenge_solana": "from moralis import auth\n\napi_key = \"YOUR_API_KEY\"\nbody = {\n    \"message\": \"defi.finance wants you to sign in with your Solana account:\n26qv4GCcx98RihuK3c4T6ozB3J7L6VwCuFVc7Ta2A3Uo\n\nI am a third party API\n\nURI: http://defi.finance\nVersion: 1\nNetwork: mainnet\nNonce: PYxxb9msdjVXsMQ9x\nIssued At: 2022-08-25T11:02:34.097Z\nExpiration Time: 2022-08-25T11:12:38.243Z\nResources:\n- https://docs.moralis.io/\", \n    \"signature\": \"2pH9DqD5rve2qV4yBDshcAjWd2y8TqMx8BPb7f3KoNnuLEhE5JwjruYi4jaFaD4HN6wriLz2Vdr32kRBAJmHcyny\", \n}\n\nresult = auth.challenge.verify_challenge_solana(\n    api_key=api_key,\n    body=body,\n)\n\nprint(result)\n",
            "request_challenge_evm": "from moralis import auth\n\napi_key = \"YOUR_API_KEY\"\nbody = {\n    \"domain\": \"defi.finance\", \n    \"chainId\": \"1\", \n    \"address\": \"0xAb5801a7D398351b8bE11C439e05C5B3259aeC9B\", \n    \"statement\": \"Please confirm\", \n    \"uri\": \"https://defi.finance/\", \n    \"expirationTime\": \"2020-01-01T00:00:00.000Z\", \n    \"notBefore\": \"2020-01-01T00:00:00.000Z\", \n    \"resources\": ['https://docs.moralis.io/'], \n    \"timeout\": 15, \n}\n\nresult = auth.challenge.request_challenge_evm(\n    api_key=api_key,\n    body=body,\n)\n\nprint(result)\n"
        }
    },
    "streams": {
        "project": {
            "get_settings": "from moralis import streams\n\napi_key = \"YOUR_API_KEY\"\n\nresult = streams.project.get_settings(\n    api_key=api_key,\n)\n\nprint(result)\n",
            "set_settings": "from moralis import streams\n\napi_key = \"YOUR_API_KEY\"\nbody = {\n    \"region\": \"\", \n}\n\nresult = streams.project.set_settings(\n    api_key=api_key,\n    body=body,\n)\n\nprint(result)\n"
        },
        "history": {
            "get_history": "from moralis import streams\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"limit\": 1.2, \n    \"cursor\": \"\", \n    \"excludePayload\": True, \n}\n\nresult = streams.history.get_history(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n",
            "replay_history": "from moralis import streams\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"streamId\": \"\", \n    \"id\": \"\", \n}\n\nresult = streams.history.replay_history(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n"
        },
        "evm": {
            "get_addresses": "from moralis import streams\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"id\": \"\", \n    \"limit\": 1.2, \n    \"cursor\": \"\", \n}\n\nresult = streams.evm.get_addresses(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n",
            "delete_stream": "from moralis import streams\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"id\": \"\", \n}\n\nresult = streams.evm.delete_stream(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n",
            "add_address_to_stream": "from moralis import streams\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"id\": \"\", \n}\nbody = {\n    \"address\": \"\", \n}\n\nresult = streams.evm.add_address_to_stream(\n    api_key=api_key,\n    params=params,\n    body=body,\n)\n\nprint(result)\n",
            "delete_address_from_stream": "from moralis import streams\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"id\": \"\", \n}\nbody = {\n    \"address\": \"\", \n}\n\nresult = streams.evm.delete_address_from_stream(\n    api_key=api_key,\n    params=params,\n    body=body,\n)\n\nprint(result)\n",
            "get_stream": "from moralis import streams\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"id\": \"\", \n}\n\nresult = streams.evm.get_stream(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n",
            "get_streams": "from moralis import streams\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"limit\": 1.2, \n    \"cursor\": \"\", \n}\n\nresult = streams.evm.get_streams(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n",
            "create_stream": "from moralis import streams\n\napi_key = \"YOUR_API_KEY\"\nbody = {\n    \"webhookUrl\": \"\", \n    \"description\": \"\", \n    \"tag\": \"\", \n    \"topic0\": [], \n    \"allAddresses\": True, \n    \"includeNativeTxs\": True, \n    \"includeContractLogs\": True, \n    \"includeInternalTxs\": True, \n    \"abi\": [], \n    \"advancedOptions\": [], \n    \"chainIds\": [], \n}\n\nresult = streams.evm.create_stream(\n    api_key=api_key,\n    body=body,\n)\n\nprint(result)\n",
            "update_stream": "from moralis import streams\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"id\": \"\", \n}\nbody = {\n    \"webhookUrl\": \"\", \n    \"description\": \"\", \n    \"tag\": \"\", \n    \"topic0\": [], \n    \"allAddresses\": True, \n    \"includeNativeTxs\": True, \n    \"includeContractLogs\": True, \n    \"includeInternalTxs\": True, \n    \"abi\": [], \n    \"advancedOptions\": [], \n    \"chainIds\": [], \n}\n\nresult = streams.evm.update_stream(\n    api_key=api_key,\n    params=params,\n    body=body,\n)\n\nprint(result)\n",
            "update_stream_status": "from moralis import streams\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"id\": \"\", \n}\nbody = {\n    \"status\": \"\", \n}\n\nresult = streams.evm.update_stream_status(\n    api_key=api_key,\n    params=params,\n    body=body,\n)\n\nprint(result)\n"
        },
        "stats": {
            "get_stats_by_stream_id": "from moralis import streams\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"streamId\": \"\", \n}\n\nresult = streams.stats.get_stats_by_stream_id(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n",
            "get_stats": "from moralis import streams\n\napi_key = \"YOUR_API_KEY\"\n\nresult = streams.stats.get_stats(\n    api_key=api_key,\n)\n\nprint(result)\n"
        }
    }
}